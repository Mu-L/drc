{"version":3,"sources":["webpack:///./src/components/v2/mhaMessengers/drcMqConfig.vue","webpack:///src/components/v2/mhaMessengers/drcMqConfig.vue","webpack:///./src/components/v2/mhaMessengers/drcMqConfig.vue?9f1c","webpack:///./src/components/v2/mhaMessengers/drcMqConfig.vue?42f1","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/views/v2/meta/dbMqBuildV2.vue?e01e","webpack:///./src/views/v2/meta/dbMqBuildV2.vue","webpack:///./src/components/v2/dbDrcBuild/mqTables.vue","webpack:///./src/components/v2/dbDrcBuild/dbMqConfig.vue","webpack:///src/components/v2/dbDrcBuild/dbMqConfig.vue","webpack:///./src/components/v2/dbDrcBuild/dbMqConfig.vue?6ec2","webpack:///./src/components/v2/dbDrcBuild/dbMqConfig.vue?ab6d","webpack:///src/components/v2/dbDrcBuild/mqTables.vue","webpack:///./src/components/v2/dbDrcBuild/mqTables.vue?9c46","webpack:///./src/components/v2/dbDrcBuild/mqTables.vue?356f","webpack:///./src/components/v2/dbDrcBuild/mhaMqPanel.vue","webpack:///./src/components/v2/dbDrcBuild/mhaDbMqPanel.vue","webpack:///src/components/v2/dbDrcBuild/mhaDbMqPanel.vue","webpack:///./src/components/v2/dbDrcBuild/mhaDbMqPanel.vue?0b54","webpack:///./src/components/v2/dbDrcBuild/mhaDbMqPanel.vue?1210","webpack:///src/components/v2/dbDrcBuild/mhaMqPanel.vue","webpack:///./src/components/v2/dbDrcBuild/mhaMqPanel.vue?da43","webpack:///./src/components/v2/dbDrcBuild/mhaMqPanel.vue?73f4","webpack:///src/views/v2/meta/dbMqBuildV2.vue","webpack:///./src/views/v2/meta/dbMqBuildV2.vue?3589","webpack:///./src/views/v2/meta/dbMqBuildV2.vue?e408"],"names":["render","_vm","this","_c","_self","ref","staticStyle","attrs","drc","_v","_s","mqType","model","value","mhaName","callback","$$v","$set","expression","key","currentInstances","replicator","replicators","_l","replicatorList","item","ip","az","getRole","on","autoConfigReplicator","showMhaApplierConfig","messenger","messengers","messengerList","type","autoConfigMessenger","_e","rGtidExecuted","queryMhaMachineGtid","hasTest1","testSuccess1","queryMhaGtidCheckRes","goToMqConfigs","showDbMhaApplierConfig","getMhaDbMessenger","aGtidExecuted","$event","handleReset","preCheckConfigure","submitConfig","reviewModal","minRows","maxRows","resultModal","result","reviewConfigure","warnModal","directives","name","rawName","conflictMha","domProps","target","composing","share","conflictCurrent","gtidCheck","modal","resVo","legal","mha","configGtid","purgedGtid","staticRenderFns","props","String","dc","data","dbMessengerSwitch","dbMessengerList","methods","_this","axios","get","then","response","console","log","forEach","push","_this2","getResources","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","applierData","a","existItem","find","existing","stop","refreshReplicatorInstances","_this4","params","ips","join","instances","refreshMessengerInstances","_this5","getResourcesInUse","_this6","messengerDto","gtidInit","$router","path","query","$refs","resetFields","_this7","replicatorIps","messengerIps","preCheckRes","status","workingReplicatorIps","window","alert","_this8","that","$Message","warning","message","catch","error","_this9","hasAppliers","length","_step","_iterator","_createForOfIteratorHelper","s","n","done","instance","master","err","e","f","dbApplierDtos","_step2","_iterator2","x","_this10","post","content","duration","created","component","$","$find","addToUnscopables","FIND","SKIPS_HOLES","Array","proto","forced","callbackfn","arguments","undefined","style","margin","position","staticClass","padding","background","zIndex","formItem","selectDb","meta","mqTypeList","fixDb","getExistDb","dataLoading","dbName","dbOptions","option","index","afterSelectExistReplication","selectedExistReplication","existReplicationRegionOptions","items","srcRegionName","goToCreateReplication","createModal","open","replicationType","drcConfig","dalclusterName","logicTableSummaryDtos","configDataLoading","dstRegionName","dbNames","getDrcConfig","mhaMqDtos","height","columns","tableData","scopedSlots","_u","fn","_ref","row","goToUpdateConfig","goToDeleteConfig","goToInsertConfig","actionTitle","editModal","selectedRow","srcRegion","action","filterReadOnly","finishConfig","formAction","alertInfo","show","proxy","title","successShow","bu","constants","buForChosen","indexOf","_k","keyCode","preventDefault","afterEnterTableName","tableName","refreshTopicBu","topic","excludeFilterTypes","excludeFilterTypesForChose","label","delayTime","switch","order","commonColumnLoading","getCommonColumns","handleCreateColumn","orderKey","columnsForChose","filterFields","fields","sendOnlyUpdated","excludeColumn","commonColumnLoading2","buildMode","Number","buttonTypeMap","submitAll","buttonTextMap","components","DbTablesPreview","FORM_ACTION_OPTION","CREATE","EDIT","DELETE","configData","dstRegion","Boolean","emits","rowsFilterId","colsFilterId","dbReplicationIds","originLogicTableConfig","checkTableDataList","table","dbMhaTableLoading","dbMhaTableColumn","h","srcMha","float","color","regionName","dcName","dstMha","dbMhaTablePage","total","current","size","pageSizeOpts","dbTableLoading","dbTableColumn","width","align","fixed","resizable","res","text","dbTablePage","Map","successSubmit","getParams","param","buName","tag","mode","gtidConfigurable","tblsFilterDetail","tableNames","getEditParams","logicTableConfig","logicTable","dstLogicTable","mqConfig","serialization","persistent","method","flattenObj","info","finally","val","contains","split","_callee2","_context2","getTableInfo","ob","i","_typeof","isArray","temp","j","refresh","_callee3","_context3","JSON","stringify","config","originMyConfig","getBuListFromQmq","_callee4","_context4","success","$emit","rowsFilterCreateParamInit","drcStrategyId","routeStrategyId","udlColumns","context","illegalArgument","fetchMode","columnsFilterCreateParamInit","computed","preCheckTablePage","start","end","_toConsumableArray","slice","useTripUdlOrUidMode","rowsFilter","filterMode","TRIP_UDL","TRIP_UDL_UID","includes","rowsFilterCreateParam","hasUdlColumn","fillContextByRegion","RPC","hasUidColumn","showUdlConfigDetail","hasUdlLegalConfig","hasUidLegalConfig","showUidConfigDetail","DbMqConfig","actionTitleMap","formattedString","time","slot","timestamp","datachangeLasttime","date","Date","formattedDate","toLocaleString","mhaMqDto","openModal","openDetailModal","refInFor","mhaMessengerDto","mhaDbReplications","goToSwitchMessengers","mhaColumns","delayDataLoading","disabled","transmissionType","click","showModal","renderHeader","replicationIds","_click","getMhaMessengerDelay","apply","loading","shape","icon","drcStatus","delay","prettyMilliseconds","compact","src","dbMessengerDto","_click2","map","mhas","dbs","delays","delayInfoDto","filter","id","DrcMqConfig","MhaDbMqPanel","$Modal","confirm","onOk","switchMessengers","getSwitchParams","remove","srcMhaName","mhaDbReplication","fill","MhaMqPanel","MqTables","MhaPreview","constant","$route","regionOptions","mqTypeToReplicationType","abrupt","getExistReplicationRegionOptions","resetPath","trim","_callee5","_context5","_callee6","_context6","replace"],"mappings":"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","file":"js/chunk-8383db34.86c52663.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('Row',[_c('Form',{ref:\"drc1\",staticStyle:{\"float\":\"left\",\"margin-top\":\"50px\"},attrs:{\"model\":_vm.drc,\"label-width\":250}},[_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"消息类型\",\"prop\":\"mqType\"}},[_c('Tag',{attrs:{\"color\":\"blue\"}},[_vm._v(_vm._s(_vm.mqType)+\" \")])],1),_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"集群名\",\"prop\":\"mhaName\"}},[_c('Input',{attrs:{\"readonly\":\"\",\"placeholder\":\"请输入集群名\"},model:{value:(_vm.drc.mhaName),callback:function ($$v) {_vm.$set(_vm.drc, \"mhaName\", $$v)},expression:\"drc.mhaName\"}})],1),_c('FormItem',{attrs:{\"label\":\"选择Replicator\",\"prop\":\"replicator\"}},[_c('Select',{key:_vm.drc.currentInstances.replicator,staticStyle:{\"width\":\"300px\"},attrs:{\"multiple\":\"\",\"placeholder\":\"选择Replicator\"},model:{value:(_vm.drc.replicators),callback:function ($$v) {_vm.$set(_vm.drc, \"replicators\", $$v)},expression:\"drc.replicators\"}},_vm._l((_vm.drc.replicatorList),function(item){return _c('Option',{key:item.ip,attrs:{\"value\":item.ip}},[_vm._v(_vm._s(item.ip)+\" — \"+_vm._s(item.az)+\" \"+_vm._s(_vm.getRole(item.ip, _vm.drc.currentInstances.replicator))+\" \")])}),1),_vm._v(\"   \"),_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.autoConfigReplicator}},[_vm._v(\"自动录入\")])],1),(_vm.showMhaApplierConfig())?_c('FormItem',{attrs:{\"label\":\"选择Messenger\",\"prop\":\"messenger\"}},[_c('Select',{key:_vm.drc.currentInstances.messenger,staticStyle:{\"width\":\"300px\"},attrs:{\"multiple\":\"\",\"placeholder\":\"选择集群Messenger\"},model:{value:(_vm.drc.messengers),callback:function ($$v) {_vm.$set(_vm.drc, \"messengers\", $$v)},expression:\"drc.messengers\"}},_vm._l((_vm.drc.messengerList),function(item){return _c('Option',{key:item.ip,attrs:{\"value\":item.ip}},[_vm._v(_vm._s(item.ip)+\" [\"+_vm._s(item.type === 1 ? 'A' : (item.type === 7 ? 'M' : ''))+\"] — \"+_vm._s(item.az)+\" \"+_vm._s(_vm.getRole(item.ip, _vm.drc.currentInstances.messenger))+\" \")])}),1),_vm._v(\"   \"),_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.autoConfigMessenger}},[_vm._v(\"自动录入\")])],1):_vm._e(),_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"初始拉取位点R\"}},[_c('Input',{attrs:{\"placeholder\":\"变更replicator机器时，请输入binlog拉取位点\"},model:{value:(_vm.drc.rGtidExecuted),callback:function ($$v) {_vm.$set(_vm.drc, \"rGtidExecuted\", $$v)},expression:\"drc.rGtidExecuted\"}}),_c('Row',[_c('Col',{attrs:{\"span\":\"12\"}},[_c('Button',{on:{\"click\":_vm.queryMhaMachineGtid}},[_vm._v(\"查询mha位点\")]),(_vm.hasTest1)?_c('span',[_c('Icon',{attrs:{\"type\":_vm.testSuccess1 ? 'ios-checkmark-circle' : 'ios-close-circle',\"color\":_vm.testSuccess1 ? 'green' : 'red'}}),_vm._v(\" \"+_vm._s(_vm.testSuccess1 ? '查询实时位点成功' : '连接查询失败')+\" \")],1):_vm._e()],1),_c('Col',{attrs:{\"span\":\"12\"}},[_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.queryMhaGtidCheckRes}},[_vm._v(\"位点校验\")])],1)],1)],1),_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"mq配置\"}},[_c('Button',{attrs:{\"type\":\"primary\",\"ghost\":\"\"},on:{\"click\":_vm.goToMqConfigs}},[_vm._v(\"mq配置\")])],1),(_vm.showDbMhaApplierConfig())?_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"DB Applier 配置\"}},[_c('Button',{attrs:{\"type\":\"primary\",\"ghost\":\"\"},on:{\"click\":_vm.getMhaDbMessenger}},[_vm._v(\"Db Applier 管理\")])],1):_vm._e(),(_vm.showMhaApplierConfig())?_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"初始同步位点A\"}},[_c('Input',{attrs:{\"placeholder\":\"请输入DRC同步起始位点\"},model:{value:(_vm.drc.aGtidExecuted),callback:function ($$v) {_vm.$set(_vm.drc, \"aGtidExecuted\", $$v)},expression:\"drc.aGtidExecuted\"}})],1):_vm._e()],1)],1),_c('Form',{staticStyle:{\"margin-top\":\"50px\"},attrs:{\"label-width\":250}},[_c('FormItem',[_c('Row',[_c('Col',{attrs:{\"span\":\"6\"}},[_c('Button',{on:{\"click\":function($event){return _vm.handleReset('drc1')}}},[_vm._v(\"重置\")])],1),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.preCheckConfigure ()}}},[_vm._v(\"提交\")])],1)],1)],1),_c('Modal',{attrs:{\"title\":\"确认配置信息\",\"width\":\"900px\"},on:{\"on-ok\":_vm.submitConfig},model:{value:(_vm.drc.reviewModal),callback:function ($$v) {_vm.$set(_vm.drc, \"reviewModal\", $$v)},expression:\"drc.reviewModal\"}},[_c('Form',{staticStyle:{\"width\":\"80%\"}},[_c('FormItem',{attrs:{\"label\":\"集群名\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.mhaName),callback:function ($$v) {_vm.$set(_vm.drc, \"mhaName\", $$v)},expression:\"drc.mhaName\"}})],1),_c('FormItem',{attrs:{\"label\":\"集群Replicator\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.replicators),callback:function ($$v) {_vm.$set(_vm.drc, \"replicators\", $$v)},expression:\"drc.replicators\"}})],1),_c('FormItem',{attrs:{\"label\":\"集群Messenger\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.messengers),callback:function ($$v) {_vm.$set(_vm.drc, \"messengers\", $$v)},expression:\"drc.messengers\"}})],1),_c('FormItem',{attrs:{\"label\":\"新增Replicator的新增binlog拉取位点\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.rGtidExecuted),callback:function ($$v) {_vm.$set(_vm.drc, \"rGtidExecuted\", $$v)},expression:\"drc.rGtidExecuted\"}})],1),_c('FormItem',{attrs:{\"label\":\"Messenger集群的起始位点\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.aGtidExecuted),callback:function ($$v) {_vm.$set(_vm.drc, \"aGtidExecuted\", $$v)},expression:\"drc.aGtidExecuted\"}})],1)],1)],1),_c('Modal',{attrs:{\"title\":\"配置结果\",\"width\":\"1200px\"},model:{value:(_vm.drc.resultModal),callback:function ($$v) {_vm.$set(_vm.drc, \"resultModal\", $$v)},expression:\"drc.resultModal\"}},[_c('Form',{staticStyle:{\"width\":\"100%\"}},[_c('FormItem',{attrs:{\"label\":\"集群配置\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.result),callback:function ($$v) {_vm.result=$$v},expression:\"result\"}})],1)],1)],1),_c('Modal',{attrs:{\"title\":\"存在一对多共用运行配置请确认\",\"width\":\"900px\"},on:{\"on-ok\":_vm.reviewConfigure},model:{value:(_vm.drc.warnModal),callback:function ($$v) {_vm.$set(_vm.drc, \"warnModal\", $$v)},expression:\"drc.warnModal\"}},[_c('label',{staticStyle:{\"color\":\"black\"}},[_vm._v(\"共用replicator配置的集群: \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.drc.conflictMha),expression:\"drc.conflictMha\"}],domProps:{\"value\":(_vm.drc.conflictMha)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.drc, \"conflictMha\", $event.target.value)}}}),_c('Divider'),_c('div',[_c('p',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"线上一对多replicator配置\")]),_c('ul',_vm._l((_vm.drc.replicators.share),function(item){return _c('ol',{key:item},[_vm._v(_vm._s(item))])}),0)]),_c('Divider'),_c('div',[_c('p',{staticStyle:{\"color\":\"black\"}},[_vm._v(\"修改后replicator配置\")]),_c('ul',_vm._l((_vm.drc.replicators.conflictCurrent),function(item){return _c('ol',{key:item},[_vm._v(_vm._s(item))])}),0)])],1),_c('Modal',{attrs:{\"title\":\"gitd位点校验结果\",\"width\":\"900px\"},model:{value:(_vm.gtidCheck.modal),callback:function ($$v) {_vm.$set(_vm.gtidCheck, \"modal\", $$v)},expression:\"gtidCheck.modal\"}},[_c('Form',{staticStyle:{\"width\":\"80%\"}},[_c('FormItem',{attrs:{\"label\":\"校验结果\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.gtidCheck.resVo.legal),callback:function ($$v) {_vm.$set(_vm.gtidCheck.resVo, \"legal\", $$v)},expression:\"gtidCheck.resVo.legal\"}})],1),_c('FormItem',{attrs:{\"label\":\"当前Mha\"}},[_c('Input',{attrs:{\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.gtidCheck.resVo.mha),callback:function ($$v) {_vm.$set(_vm.gtidCheck.resVo, \"mha\", $$v)},expression:\"gtidCheck.resVo.mha\"}})],1),_c('FormItem',{attrs:{\"label\":\"配置位点\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.gtidCheck.resVo.configGtid),callback:function ($$v) {_vm.$set(_vm.gtidCheck.resVo, \"configGtid\", $$v)},expression:\"gtidCheck.resVo.configGtid\"}})],1),_c('FormItem',{attrs:{\"label\":\"purgedGtid\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.gtidCheck.resVo.purgedGtid),callback:function ($$v) {_vm.$set(_vm.gtidCheck.resVo, \"purgedGtid\", $$v)},expression:\"gtidCheck.resVo.purgedGtid\"}})],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template v-if=\"current === 0\" :key=\"0\">\n  <div>\n    <Row>\n      <Form ref=\"drc1\" :model=\"drc\" :label-width=\"250\" style=\"float: left; margin-top: 50px\">\n        <FormItem label=\"消息类型\" prop=\"mqType\" style=\"width: 600px\">\n          <Tag  color=\"blue\">{{mqType}}\n          </Tag>\n        </FormItem>\n        <FormItem label=\"集群名\" prop=\"mhaName\" style=\"width: 600px\">\n          <Input v-model=\"drc.mhaName\" readonly placeholder=\"请输入集群名\"/>\n        </FormItem>\n        <FormItem label=\"选择Replicator\" prop=\"replicator\">\n          <Select v-model=\"drc.replicators\" multiple style=\"width: 300px\" :key=\"drc.currentInstances.replicator\"  placeholder=\"选择Replicator\">\n            <Option v-for=\"item in drc.replicatorList\" :value=\"item.ip\" :key=\"item.ip\">{{ item.ip }} — {{ item.az}}\n              {{getRole(item.ip, drc.currentInstances.replicator)}}\n            </Option>\n          </Select>\n          &nbsp;\n          <Button type=\"success\" @click=\"autoConfigReplicator\">自动录入</Button>\n        </FormItem>\n        <FormItem  v-if=\"showMhaApplierConfig()\" label=\"选择Messenger\" prop=\"messenger\">\n          <Select v-model=\"drc.messengers\" multiple style=\"width: 300px\" :key=\"drc.currentInstances.messenger\" placeholder=\"选择集群Messenger\">\n            <Option v-for=\"item in drc.messengerList\" :value=\"item.ip\" :key=\"item.ip\">{{ item.ip }}  [{{ item.type === 1 ? 'A' : (item.type === 7 ? 'M' : '') }}] — {{ item.az }}\n              {{getRole(item.ip, drc.currentInstances.messenger)}}\n            </Option>\n          </Select>\n          &nbsp;\n          <Button type=\"success\" @click=\"autoConfigMessenger\">自动录入</Button>\n        </FormItem>\n        <FormItem label=\"初始拉取位点R\" style=\"width: 600px\">\n          <Input v-model=\"drc.rGtidExecuted\" placeholder=\"变更replicator机器时，请输入binlog拉取位点\"/>\n          <Row>\n            <Col span=\"12\">\n              <Button @click=\"queryMhaMachineGtid\">查询mha位点</Button>\n              <span v-if=\"hasTest1\">\n                  <Icon :type=\"testSuccess1 ? 'ios-checkmark-circle' : 'ios-close-circle'\"\n                        :color=\"testSuccess1 ? 'green' : 'red'\"/>\n                    {{ testSuccess1 ? '查询实时位点成功' : '连接查询失败' }}\n                </span>\n            </Col>\n            <Col span=\"12\">\n              <Button type=\"success\" @click=\"queryMhaGtidCheckRes\">位点校验</Button>\n            </Col>\n          </Row>\n        </FormItem>\n        <FormItem label=\"mq配置\" style=\"width: 600px\">\n          <Button type=\"primary\" ghost @click=\"goToMqConfigs\">mq配置</Button>\n        </FormItem>\n        <FormItem v-if=\"showDbMhaApplierConfig()\" label=\"DB Applier 配置\"  style=\"width: 600px\">\n          <Button type=\"primary\" ghost @click=\"getMhaDbMessenger\">Db Applier 管理</Button>\n        </FormItem>\n        <FormItem v-if=\"showMhaApplierConfig()\"  label=\"初始同步位点A\" style=\"width: 600px\">\n          <Input v-model=\"drc.aGtidExecuted\" placeholder=\"请输入DRC同步起始位点\"/>\n        </FormItem>\n        <!--      <FormItem label=\"行过滤\" style=\"width: 600px\">-->\n        <!--        <Button type=\"primary\" ghost @click=\"goToConfigRowsFiltersInSrcApplier\">配置行过滤</Button>-->\n        <!--      </FormItem>-->\n      </Form>\n    </Row>\n    <Form :label-width=\"250\" style=\"margin-top: 50px\">\n      <FormItem>\n        <Row>\n          <Col span=\"6\">\n            <Button @click=\"handleReset('drc1')\">重置</Button>\n          </Col>\n          <Col span=\"6\">\n            <Button type=\"primary\" @click=\"preCheckConfigure ()\">提交</Button>\n          </Col>\n        </Row>\n      </FormItem>\n      <Modal\n        v-model=\"drc.reviewModal\"\n        title=\"确认配置信息\"\n        width=\"900px\"\n        @on-ok=\"submitConfig\">\n        <Form style=\"width: 80%\">\n          <FormItem label=\"集群名\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.mhaName\" readonly/>\n          </FormItem>\n          <FormItem label=\"集群Replicator\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.replicators\" readonly/>\n          </FormItem>\n          <FormItem label=\"集群Messenger\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.messengers\" readonly/>\n          </FormItem>\n          <FormItem label=\"新增Replicator的新增binlog拉取位点\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.rGtidExecuted\" readonly/>\n          </FormItem>\n          <FormItem label=\"Messenger集群的起始位点\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.aGtidExecuted\" readonly/>\n          </FormItem>\n        </Form>\n      </Modal>\n      <Modal\n        v-model=\"drc.resultModal\"\n        title=\"配置结果\"\n        width=\"1200px\">\n        <Form style=\"width: 100%\">\n          <FormItem label=\"集群配置\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"result\" readonly/>\n          </FormItem>\n        </Form>\n      </Modal>\n      <!--             v-model=\"drc.warnModal\"-->\n      <Modal\n        v-model=\"drc.warnModal\"\n        title=\"存在一对多共用运行配置请确认\"\n        width=\"900px\"\n        @on-ok=\"reviewConfigure\">\n        <label style=\"color: black\">共用replicator配置的集群: </label>\n        <input v-model=\"drc.conflictMha\"></input>\n        <Divider/>\n        <div>\n          <p style=\"color: red\">线上一对多replicator配置</p>\n          <ul>\n            <ol v-for=\"item in drc.replicators.share\" :key=\"item\">{{ item }}</ol>\n          </ul>\n        </div>\n        <Divider/>\n        <div>\n          <p style=\"color: black\">修改后replicator配置</p>\n          <ul>\n            <ol v-for=\"item in drc.replicators.conflictCurrent\" :key=\"item\">{{ item }}</ol>\n          </ul>\n        </div>\n      </Modal>\n      <Modal\n        v-model=\"gtidCheck.modal\"\n        title=\"gitd位点校验结果\"\n        width=\"900px\">\n        <Form style=\"width: 80%\">\n          <FormItem label=\"校验结果\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"gtidCheck.resVo.legal\" readonly/>\n          </FormItem>\n          <FormItem label=\"当前Mha\">\n            <Input :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"gtidCheck.resVo.mha\" readonly/>\n          </FormItem>\n          <FormItem label=\"配置位点\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"gtidCheck.resVo.configGtid\" readonly/>\n          </FormItem>\n          <FormItem label=\"purgedGtid\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"gtidCheck.resVo.purgedGtid\" readonly/>\n          </FormItem>\n        </Form>\n      </Modal>\n    </Form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'drcMqConfig',\n  props: {\n    mhaName: String,\n    mqType: String,\n    dc: String\n  },\n  data () {\n    return {\n      hasTest1: false,\n      testSuccess1: false,\n      result: false,\n      gtidCheck: {\n        modal: false,\n        resVo: {\n          mha: '',\n          legal: '',\n          configGtid: '',\n          purgedGtid: ''\n        }\n      },\n      drc: {\n        reviewModal: false,\n        warnModal: false,\n        mhaName: this.mhaName,\n        mqType: this.mqType,\n        rGtidExecuted: '',\n        aGtidExecuted: '',\n        replicators: {},\n        messengers: [],\n        currentInstances: {\n          messenger: [],\n          replicator: []\n        },\n        replicatorList: {},\n        messengerList: [],\n        dbMessengerSwitch: false,\n        dbMessengerList: []\n      }\n    }\n  },\n  methods: {\n    autoConfigReplicator () {\n      this.axios.get('/api/drc/v2/resource/mha/auto?mhaName=' + this.drc.mhaName + '&type=0' + '&selectedIps=' + this.drc.replicators)\n        .then(response => {\n          console.log(response.data)\n          this.drc.replicators = []\n          response.data.data.forEach(ip => this.drc.replicators.push(ip.ip))\n        })\n    },\n    autoConfigMessenger () {\n      this.axios.get('/api/drc/v2/resource/mha/auto?mhaName=' + this.drc.mhaName + '&type=7' + '&selectedIps=' + this.drc.messengers)\n        .then(response => {\n          console.log(response.data)\n          this.drc.messengers = []\n          response.data.data.forEach(ip => this.drc.messengers.push(ip.ip))\n        })\n    },\n    async getResources () {\n      this.drc.messengerList = []\n      this.axios.get('/api/drc/v2/resource/mha/all?mhaName=' + this.drc.mhaName + '&type=0')\n        .then(response => {\n          console.log(response.data)\n          this.drc.replicatorList = response.data.data\n        })\n      await this.axios.get('/api/drc/v2/resource/mha/all?mhaName=' + this.drc.mhaName + '&type=7&subType=' + this.drc.mqType)\n        .then(response => {\n          const applierData = response.data.data\n          applierData.forEach(a => {\n            const existItem = this.drc.messengerList.find(existing => existing.ip === a.ip)\n            if (!existItem) {\n              this.drc.messengerList.push(a)\n            }\n          })\n          // this.drc.messengerList = { ...this.drc.messengerList, ...response.data.data }\n        })\n      this.axios.get('/api/drc/v2/config/mha/dbMessenger?mhaName=' + this.drc.mhaName + '&mqType=' + this.drc.mqType)\n        .then(response => {\n          this.drc.dbMessengerList = response.data.data\n        })\n    },\n    refreshReplicatorInstances () {\n      this.axios.get('/api/drc/v2/remote/resource/replicatorInstances', {\n        params: {\n          mhaName: this.drc.mhaName,\n          ips: this.drc.replicators.join(',')\n        }\n      }).then(response => {\n        const instances = response.data.data\n        console.log('replicator instance: ', instances)\n        this.drc.currentInstances.replicator = instances\n      })\n    },\n    refreshMessengerInstances () {\n      this.axios.get('/api/drc/v2/remote/resource/messengerInstances', {\n        params: {\n          mqType: this.drc.mqType,\n          mhaName: this.drc.mhaName,\n          ips: this.drc.messengers.join(',')\n        }\n      }).then(response => {\n        const instances = response.data.data\n        console.log('messenger instance: ', instances)\n        this.drc.currentInstances.messenger = instances\n      })\n    },\n    getResourcesInUse () {\n      this.axios.get('/api/drc/v2/mha/replicator', { params: { mhaName: this.drc.mhaName } })\n        .then(response => {\n          console.log(this.drc.mhaName + ' replicators ' + response.data.data)\n          this.drc.replicators = []\n          response.data.data.forEach(ip => this.drc.replicators.push(ip))\n          this.refreshReplicatorInstances()\n        })\n      this.axios.get('/api/drc/v2/mha/messenger', {\n        params: {\n          mhaName: this.drc.mhaName,\n          mqType: this.drc.mqType\n        }\n      })\n        .then(response => {\n          const messengerDto = response.data.data\n          console.log(this.drc.mhaName + ' messengers ' + messengerDto)\n          this.drc.messengers = messengerDto.ips\n          this.drc.aGtidExecuted = messengerDto.gtidInit\n          this.refreshMessengerInstances()\n        })\n    },\n    goToMqConfigs () {\n      console.log('go to change mq config for ' + this.drc.mhaName)\n      this.$router.push({ path: '/v2/mqConfigs', query: { mhaName: this.drc.mhaName, mqType: this.drc.mqType } })\n    },\n    getMhaDbMessenger () {\n      this.$router.push({\n        path: '/dbMessengers',\n        query: {\n          mhaName: this.drc.mhaName,\n          mqType: this.drc.mqType\n        }\n      })\n    },\n    handleReset (name) {\n      this.$refs[name].resetFields()\n    },\n    preCheckConfigure () {\n      const params = {\n        mhaName: this.drc.mhaName,\n        replicatorIps: this.drc.replicators.join(','),\n        messengerIps: this.drc.messengers.join(',')\n      }\n      console.log(params)\n      this.axios.get('/api/drc/v2/mha/replicatorIps/check', {\n        params: params\n      }).then(response => {\n        const preCheckRes = response.data.data\n        if (preCheckRes.status === 0) {\n          // 无风险继续\n          this.drc.reviewModal = true\n        } else if (preCheckRes.status === 1) {\n          // 有风险，进入确认页面\n          this.drc.replicators.share = preCheckRes.workingReplicatorIps\n          this.drc.replicators.conflictCurrent = this.drc.replicators\n          this.drc.conflictMha = preCheckRes.conflictMha\n          this.drc.warnModal = true\n        } else {\n          // 响应失败\n          window.alert('config preCheck fail')\n        }\n      })\n    },\n    queryMhaMachineGtid () {\n      this.hasTest1 = false\n      this.drc.rGtidExecuted = ''\n      const that = this\n      console.log('/api/drc/v2/mha/gtid/executed?mha=' + this.drc.mhaName)\n      that.axios.get('/api/drc/v2/mha/gtid/executed?mha=' + this.drc.mhaName)\n        .then(response => {\n          this.hasTest1 = true\n          if (response.data.status === 0) {\n            this.drc.rGtidExecuted = response.data.data\n            this.testSuccess1 = true\n          } else {\n            this.testSuccess1 = false\n            this.$Message.warning('查询位点失败: ' + response.data.message)\n          }\n        })\n        .catch(message => {\n          this.$Message.error('查询位点异常: ' + message)\n        })\n    },\n    queryMhaGtidCheckRes () {\n      if (this.drc.rGtidExecuted == null || this.drc.rGtidExecuted === '') {\n        this.$Message.warning('位点为空！')\n        return\n      }\n      const that = this\n      console.log('/api/drc/v2/mha/gtid/checkResult?mha=' + this.drc.mhaName +\n        '&configGtid=' + this.drc.rGtidExecuted)\n      that.axios.get('/api/drc/v2/mha/gtid/checkResult?mha=' + this.drc.mhaName +\n        '&configGtid=' + this.drc.rGtidExecuted)\n        .then(response => {\n          if (response.data.status === 0) {\n            this.gtidCheck.resVo = {\n              mha: this.drc.mhaName,\n              legal: response.data.data.legal === true ? '合理位点' : 'binlog已经被purge',\n              configGtid: this.drc.rGtidExecuted,\n              purgedGtid: response.data.data.purgedGtid\n            }\n            this.gtidCheck.modal = true\n          } else {\n            console.log('api fail:' + '/api/drc/v2/mha/gtid/checkResult?mha=' + this.drc.mhaName +\n              '&configGtid=' + this.drc.rGtidExecuted)\n          }\n        })\n        .catch(message => {\n          this.$Message.error('校验位点异常: ' + message)\n        })\n    },\n    showDbMhaApplierConfig () {\n      return this.drc.dbMessengerSwitch || this.hasAppliers(this.drc.dbMessengerList)\n    },\n    showMhaApplierConfig () {\n      return true\n      // return !this.hasAppliers(this.drc.dbMessengerList)\n    },\n    getRole (ip, currentInstances) {\n      if (!currentInstances || currentInstances.length === 0) {\n        return ''\n      }\n      for (const instance of currentInstances) {\n        if (instance.ip === ip) {\n          return ' — ' + (instance.master ? 'Master' : 'Slave')\n        }\n      }\n      return ''\n    },\n    hasAppliers (dbApplierDtos) {\n      for (const x of dbApplierDtos) {\n        if (x.ips && x.ips.length > 0) {\n          return true\n        }\n      }\n      return false\n    },\n    submitConfig () {\n      const that = this\n      this.axios.post('/api/drc/v2/config/messenger/submitConfig', {\n        mhaName: this.drc.mhaName,\n        mqType: this.drc.mqType,\n        replicatorIps: this.drc.replicators,\n        messengerIps: this.drc.messengers,\n        aGtidExecuted: this.drc.aGtidExecuted,\n        rGtidExecuted: this.drc.rGtidExecuted\n      }).then(response => {\n        console.log(response.data)\n        if (response.data.status === 1) {\n          this.$Message.warning({\n            content: '提交失败：' + response.data.message,\n            duration: 10\n          })\n          return\n        }\n        that.result = response.data.data\n        that.drc.reviewModal = false\n        that.drc.resultModal = true\n      }).catch(message => {\n        this.$Message.error({\n          content: '提交异常: ' + message,\n          duration: 10\n        })\n      })\n    },\n    reviewConfigure () {\n      this.drc.reviewModal = true\n    }\n  },\n  created () {\n    this.getResources()\n    this.getResourcesInUse()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./drcMqConfig.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./drcMqConfig.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./drcMqConfig.vue?vue&type=template&id=295173ba&scoped=true&v-if=current%20%3D%3D%3D%200&%3Akey=0\"\nimport script from \"./drcMqConfig.vue?vue&type=script&lang=js\"\nexport * from \"./drcMqConfig.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"295173ba\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\n// eslint-disable-next-line es/no-array-prototype-find -- testing\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqBuildV2.vue?vue&type=style&index=0&id=1472200e&prod&lang=css\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('base-component',[_c('Breadcrumb',{style:({margin: '15px 0 15px 185px', position: 'fixed'})},[_c('BreadcrumbItem',{attrs:{\"to\":\"/home\"}},[_vm._v(\"首页\")]),_c('BreadcrumbItem',{attrs:{\"to\":\"/v2/dbMqBuildV2\"}},[_vm._v(\"DB粒度 Mq\")])],1),_c('Content',{staticClass:\"content\",style:({padding: '10px', background: '#ffffff', margin: '50px -250px 111px 185px', zIndex: '1'})},[_c('Row',{attrs:{\"gutter\":10,\"align\":\"middle\"}},[_c('Col',{attrs:{\"span\":\"18\"}},[_c('Form',{staticStyle:{\"margin-right\":\"20px\",\"margin-top\":\"10px\"},attrs:{\"model\":_vm.formItem,\"label-width\":100}},[_c('FormItem',{attrs:{\"label\":\"消息类型\",\"required\":true}},[_c('Select',{attrs:{\"placeholder\":\"mqType\"},on:{\"on-change\":_vm.selectDb},model:{value:(_vm.meta.mqType),callback:function ($$v) {_vm.$set(_vm.meta, \"mqType\", $$v)},expression:\"meta.mqType\"}},_vm._l((_vm.mqTypeList),function(item){return _c('Option',{key:item,attrs:{\"value\":item}},[_vm._v(_vm._s(item)+\" \")])}),1)],1),_c('FormItem',{attrs:{\"label\":\"数据库\",\"required\":true}},[_c('Select',{attrs:{\"filterable\":\"\",\"disabled\":!!_vm.meta.fixDb,\"placeholder\":\"请搜索数据库信息\",\"remote-method\":_vm.getExistDb,\"loading\":_vm.dataLoading},on:{\"on-change\":_vm.selectDb},model:{value:(_vm.meta.dbName),callback:function ($$v) {_vm.$set(_vm.meta, \"dbName\", $$v)},expression:\"meta.dbName\"}},_vm._l((_vm.meta.dbOptions),function(option,index){return _c('Option',{key:index,attrs:{\"value\":option.dbName}},[_vm._v(_vm._s(option.dbName))])}),1)],1),_c('FormItem',{attrs:{\"label\":\"同步方向\",\"required\":true}},[_c('RadioGroup',{attrs:{\"button-style\":\"solid\"},on:{\"on-change\":_vm.afterSelectExistReplication},model:{value:(_vm.selectedExistReplication),callback:function ($$v) {_vm.selectedExistReplication=$$v},expression:\"selectedExistReplication\"}},_vm._l((_vm.meta.existReplicationRegionOptions),function(items){return _c('Radio',{key:items.srcRegionName,attrs:{\"label\":items.srcRegionName,\"border\":\"\"}},[_vm._v(\" \"+_vm._s(items.srcRegionName)+\" \")])}),1),_c('Button',{attrs:{\"type\":\"primary\",\"icon\":\"md-add\",\"ghost\":\"\"},on:{\"click\":_vm.goToCreateReplication}},[_vm._v(\"新增\")]),_c('Modal',{attrs:{\"width\":\"1200px\",\"footer-hide\":true,\"title\":\"创建同步\"},model:{value:(_vm.createModal.open),callback:function ($$v) {_vm.$set(_vm.createModal, \"open\", $$v)},expression:\"createModal.open\"}},[(_vm.createModal.open)?_c('mha-preview',{attrs:{\"db-name\":_vm.meta.dbName,\"replication-type\":_vm.replicationType,\"exist-replication-region-options\":_vm.meta.existReplicationRegionOptions},on:{\"updated\":_vm.selectDb}}):_vm._e()],1)],1),_c('Divider',{attrs:{\"orientation\":\"left\"}},[_vm._v(\"消息投递配置\")]),_c('Card',{staticStyle:{\"width\":\"100%\"}},[_c('mq-tables',{attrs:{\"dalcluster-name\":_vm.drcConfig.dalclusterName,\"table-data\":_vm.drcConfig.logicTableSummaryDtos,\"data-loading\":_vm.configDataLoading,\"src-region\":_vm.meta.srcRegionName,\"dst-region\":_vm.meta.dstRegionName,\"db-name\":_vm.meta.dbName,\"db-names\":_vm.drcConfig.dbNames,\"mq-type\":_vm.meta.mqType},on:{\"updated\":_vm.getDrcConfig}})],1),_c('Divider',{attrs:{\"orientation\":\"left\"}},[_vm._v(\"DB\")]),_c('Card',{staticStyle:{\"width\":\"100%\"}},[(_vm.drcConfig.mhaMqDtos)?_c('mha-mq-panel',{attrs:{\"mha-mq-dtos\":_vm.drcConfig.mhaMqDtos},on:{\"updated\":_vm.getDrcConfig}}):_vm._e()],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{style:({padding: '1px 1px',height: '100%'})},[_c('Table',{ref:\"multipleTable\",staticStyle:{\"margin-top\":\"20px\"},attrs:{\"stripe\":\"\",\"columns\":_vm.columns,\"data\":_vm.tableData,\"loading\":_vm.dataLoading,\"border\":\"\"},scopedSlots:_vm._u([{key:\"action\",fn:function({ row, index }){return [_c('Button',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.goToUpdateConfig(row, index)}}},[_vm._v(\"修改 \")]),_c('Button',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"type\":\"error\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.goToDeleteConfig(row, index)}}},[_vm._v(\"删除 \")])]}}])}),_c('br'),_c('Button',{attrs:{\"type\":\"success\",\"icon\":\"md-add\"},on:{\"click\":_vm.goToInsertConfig}},[_vm._v(\" 新增 \")]),_c('Modal',{attrs:{\"width\":\"1200px\",\"footer-hide\":true,\"title\":_vm.actionTitle},model:{value:(_vm.editModal.open),callback:function ($$v) {_vm.$set(_vm.editModal, \"open\", $$v)},expression:\"editModal.open\"}},[(_vm.editModal.open)?_c('db-mq-config',{ref:\"dbReplicationConfigComponent\",attrs:{\"dalcluster-name\":_vm.dalclusterName,\"mq-type\":_vm.mqType,\"config-data\":_vm.selectedRow,\"src-region\":_vm.srcRegion,\"dst-region\":_vm.srcRegion,\"db-names\":_vm.dbNames,\"form-action\":_vm.action,\"filter-read-only\":_vm.filterReadOnly},on:{\"finished\":_vm.finishConfig}}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{style:({padding: '1px 1px',height: '100%'})},[_c('Row',{attrs:{\"gutter\":10,\"align\":\"middle\"}},[_c('Col',{attrs:{\"span\":\"13\"}},[_c('Form',{staticStyle:{\"margin-right\":\"20px\",\"margin-top\":\"10px\"},attrs:{\"model\":_vm.formItem,\"disabled\":_vm.formAction === 'delete',\"label-width\":100}},[(_vm.alertInfo.show)?_c('Alert',{attrs:{\"type\":\"warning\",\"show-icon\":\"\",\"closable\":\"\"},scopedSlots:_vm._u([{key:\"desc\",fn:function(){return [_vm._v(_vm._s(_vm.alertInfo.message))]},proxy:true}],null,false,3041357252)},[_vm._v(\" \"+_vm._s(_vm.alertInfo.title)+\" \")]):_vm._e(),(_vm.alertInfo.successShow)?_c('Alert',{attrs:{\"type\":\"success\",\"show-icon\":\"\",\"closable\":\"\"},scopedSlots:_vm._u([{key:\"desc\",fn:function(){return [_vm._v(_vm._s(_vm.alertInfo.message))]},proxy:true}],null,false,3041357252)},[_vm._v(\" \"+_vm._s(_vm.alertInfo.title)+\" \")]):_vm._e(),_c('FormItem',{attrs:{\"label\":\"部门\"}},[_c('Select',{attrs:{\"filterable\":\"\",\"placeholder\":\"选择部门\"},model:{value:(_vm.formItem.bu),callback:function ($$v) {_vm.$set(_vm.formItem, \"bu\", $$v)},expression:\"formItem.bu\"}},_vm._l((_vm.formItem.constants.buForChosen),function(item){return _c('Option',{key:item,attrs:{\"value\":item}},[_vm._v(_vm._s(item))])}),1)],1),_c('FormItem',{attrs:{\"prop\":\"dbName\",\"label\":\"库名\",\"required\":true}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":true,\"readonly\":true,\"border\":false,\"placeholder\":\"请输入库名（支持正则）\"},model:{value:(_vm.formItem.dbName),callback:function ($$v) {_vm.$set(_vm.formItem, \"dbName\", $$v)},expression:\"formItem.dbName\"}})],1),_c('FormItem',{attrs:{\"label\":\"同步表\",\"required\":true}},[_c('Input',{attrs:{\"placeholder\":\"请输入正则表达式\"},on:{\"on-keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"space\",32,$event.key,[\" \",\"Spacebar\"]))return null;$event.preventDefault();},\"on-blur\":_vm.afterEnterTableName},model:{value:(_vm.formItem.tableName),callback:function ($$v) {_vm.$set(_vm.formItem, \"tableName\", $$v)},expression:\"formItem.tableName\"}})],1),_c('FormItem',{attrs:{\"label\":\"MQ主题\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"placeholder\":\"请输入自定义Topic\"},on:{\"on-blur\":_vm.refreshTopicBu},model:{value:(_vm.formItem.topic),callback:function ($$v) {_vm.$set(_vm.formItem, \"topic\", $$v)},expression:\"formItem.topic\"}})],1),_c('FormItem',{attrs:{\"label\":\"exclude类型\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"filterable\":\"\",\"multiple\":\"\",\"placeholder\":\"选择过滤类型\",\"disabled\":_vm.filterReadOnly},model:{value:(_vm.formItem.excludeFilterTypes),callback:function ($$v) {_vm.$set(_vm.formItem, \"excludeFilterTypes\", $$v)},expression:\"formItem.excludeFilterTypes\"}},_vm._l((_vm.excludeFilterTypesForChose),function(item){return _c('Option',{key:item.value,attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.label))])}),1)],1),(_vm.mqType === 'qmq')?_c('FormItem',{attrs:{\"label\":\"延迟投递(s)\"}},[_c('Input',{staticStyle:{\"width\":\"200px\"},attrs:{\"disabled\":_vm.filterReadOnly,\"placeholder\":\"qmq延迟投递时间,单位:秒\"},model:{value:(_vm.formItem.delayTime),callback:function ($$v) {_vm.$set(_vm.formItem, \"delayTime\", $$v)},expression:\"formItem.delayTime\"}})],1):_vm._e(),_c('FormItem',{attrs:{\"label\":\"有序消息\"}},[_c('i-switch',{attrs:{\"size\":\"large\"},scopedSlots:_vm._u([{key:\"open\",fn:function(){return [_c('span',[_vm._v(\"On\")])]},proxy:true},{key:\"close\",fn:function(){return [_c('span',[_vm._v(\"Off\")])]},proxy:true}]),model:{value:(_vm.formItem.switch.order),callback:function ($$v) {_vm.$set(_vm.formItem.switch, \"order\", $$v)},expression:\"formItem.switch.order\"}})],1),(_vm.formItem.switch.order)?_c('Card',{staticStyle:{\"margin-left\":\"100px\"},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('Icon',{attrs:{\"type\":\"md-settings\"}}),_vm._v(\" 有序消息字段 \"),_c('Button',{staticStyle:{\"margin-left\":\"50px\"},attrs:{\"icon\":\"ios-refresh\",\"size\":\"small\",\"type\":\"primary\",\"loading\":_vm.commonColumnLoading},on:{\"click\":_vm.getCommonColumns}},[_vm._v(\"获取公共字段 \")])]},proxy:true}],null,false,4117777808)},[_c('FormItem',{attrs:{\"label\":\"字段\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"filterable\":\"\",\"allow-create\":\"\",\"placeholder\":\"不选表示按主键投递\",\"clearable\":\"\"},on:{\"on-create\":_vm.handleCreateColumn},model:{value:(_vm.formItem.orderKey),callback:function ($$v) {_vm.$set(_vm.formItem, \"orderKey\", $$v)},expression:\"formItem.orderKey\"}},_vm._l((_vm.formItem.constants.columnsForChose),function(item){return _c('Option',{key:item,attrs:{\"value\":item}},[_vm._v(_vm._s(item))])}),1)],1)],1):_vm._e(),_c('FormItem',{attrs:{\"label\":\"消息包括字段\"}},[(_vm.filterReadOnly)?[(_vm.formItem.filterFields != null && _vm.formItem.filterFields.length > 0)?_c('div',[_vm._v(\" \"+_vm._s(_vm.formItem.filterFields.join(', '))+\" \")]):_c('div',{staticClass:\"array-item\"},[_c('tag',{attrs:{\"color\":\"blue\"}},[_vm._v(\"全部列\")])],1)]:[_c('i-switch',{attrs:{\"size\":\"large\"},scopedSlots:_vm._u([{key:\"open\",fn:function(){return [_c('span',[_vm._v(\"On\")])]},proxy:true},{key:\"close\",fn:function(){return [_c('span',[_vm._v(\"Off\")])]},proxy:true}]),model:{value:(_vm.formItem.switch.fields),callback:function ($$v) {_vm.$set(_vm.formItem.switch, \"fields\", $$v)},expression:\"formItem.switch.fields\"}})]],2),(_vm.filterReadOnly)?[_c('FormItem',{attrs:{\"label\":\"仅在字段有更新时投递\"}},[_c('div',[(_vm.formItem.sendOnlyUpdated)?_c('span',[_vm._v(\"是\")]):_c('span',[_vm._v(\"否\")])])]),_c('FormItem',{attrs:{\"label\":\"投递方式\"}},[_c('div',[(_vm.formItem.excludeColumn)?_c('span',[_vm._v(\"排除所选字段\")]):_c('span',[_vm._v(\"包含所选字段\")])])])]:_vm._e(),(_vm.formItem.switch.fields)?_c('Card',{staticStyle:{\"margin-left\":\"100px\"},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('Icon',{attrs:{\"type\":\"md-settings\"}}),_vm._v(\" 消息包括字段 \"),_c('Button',{staticStyle:{\"margin-left\":\"50px\"},attrs:{\"icon\":\"ios-refresh\",\"size\":\"small\",\"type\":\"primary\",\"loading\":_vm.commonColumnLoading2},on:{\"click\":() => _vm.getCommonColumns('fields')}},[_vm._v(\"获取公共字段 \")])]},proxy:true}],null,false,3443359935)},[_c('FormItem',{attrs:{\"label\":\"字段\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"filterable\":\"\",\"multiple\":\"\",\"placeholder\":\"不选表示消息包括全部字段\",\"clearable\":\"\"},model:{value:(_vm.formItem.filterFields),callback:function ($$v) {_vm.$set(_vm.formItem, \"filterFields\", $$v)},expression:\"formItem.filterFields\"}},_vm._l((_vm.formItem.constants.columnsForChose),function(item){return _c('Option',{key:item,attrs:{\"value\":item}},[_vm._v(_vm._s(item))])}),1)],1),_c('Row',[_c('FormItem',{attrs:{\"label\":\"仅在字段有更新时投递\"}},[_c('Checkbox',{attrs:{\"disabled\":_vm.filterReadOnly},model:{value:(_vm.formItem.sendOnlyUpdated),callback:function ($$v) {_vm.$set(_vm.formItem, \"sendOnlyUpdated\", $$v)},expression:\"formItem.sendOnlyUpdated\"}})],1),_c('FormItem',{attrs:{\"label\":\"是否仅排除所选字段\"}},[_c('Checkbox',{attrs:{\"disabled\":_vm.filterReadOnly},model:{value:(_vm.formItem.excludeColumn),callback:function ($$v) {_vm.$set(_vm.formItem, \"excludeColumn\", $$v)},expression:\"formItem.excludeColumn\"}})],1)],1)],1):_vm._e()],2)],1),_c('Col',{attrs:{\"span\":\"11\"}},[_c('db-tables-preview',{attrs:{\"src-region-name\":_vm.srcRegion,\"dst-region-name\":null,\"db-name\":_vm.formItem.dbName,\"table-names\":_vm.formItem.tableName,\"mode\":_vm.formItem.buildMode,\"replication-type\":Number(1)}})],1)],1),_c('Divider'),_c('Button',{staticStyle:{\"margin-left\":\"50px\"},attrs:{\"type\":_vm.buttonTypeMap.get(_vm.formAction),\"loading\":_vm.dataLoading || _vm.commonColumnLoading || _vm.commonColumnLoading2},on:{\"click\":_vm.submitAll}},[_vm._v(_vm._s(_vm.buttonTextMap.get(_vm.formAction) + ': ' + _vm.mqType)+\" \")])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :style=\"{padding: '1px 1px',height: '100%'}\">\n    <Row :gutter=10 align=\"middle\">\n      <Col span=\"13\">\n        <Form :model=\"formItem\" :disabled=\"formAction === 'delete'\" :label-width=\"100\"\n              style=\"margin-right: 20px;margin-top: 10px\">\n          <Alert type=\"warning\" show-icon v-if=\"alertInfo.show\" closable>\n            {{ alertInfo.title }}\n            <template #desc>{{ alertInfo.message }}</template>\n          </Alert>\n          <Alert type=\"success\" show-icon v-if=\"alertInfo.successShow\" closable>\n            {{ alertInfo.title }}\n            <template #desc>{{ alertInfo.message }}</template>\n          </Alert>\n          <FormItem label=\"部门\">\n            <Select v-model=\"formItem.bu\" filterable placeholder=\"选择部门\">\n              <Option v-for=\"item in formItem.constants.buForChosen\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem prop=\"dbName\" label=\"库名\" :required=true>\n            <Input type=\"textarea\" v-model=\"formItem.dbName\" :autosize=\"true\" :readonly=\"true\" :border=\"false\"\n                   placeholder=\"请输入库名（支持正则）\"/>\n          </FormItem>\n          <FormItem label=\"同步表\" :required=true>\n            <Input @on-keydown.space.prevent v-model=\"formItem.tableName\" placeholder=\"请输入正则表达式\"\n                   @on-blur=\"afterEnterTableName\"></Input>\n          </FormItem>\n\n          <FormItem label=\"MQ主题\">\n            <Input v-model=\"formItem.topic\" style=\"width:350px\" placeholder=\"请输入自定义Topic\"\n                   @on-blur=\"refreshTopicBu\"\n            />\n          </FormItem>\n          <FormItem label=\"exclude类型\">\n            <Select v-model=\"formItem.excludeFilterTypes\" filterable  multiple style=\"width: 200px\" placeholder=\"选择过滤类型\" :disabled=\"filterReadOnly\">\n              <Option v-for=\"item in excludeFilterTypesForChose\" :value=\"item.value\" :key=\"item.value\" >{{ item.label }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem v-if=\"mqType === 'qmq'\" label=\"延迟投递(s)\">\n            <Input v-model=\"formItem.delayTime\"  style=\"width:200px\" :disabled=\"filterReadOnly\" placeholder=\"qmq延迟投递时间,单位:秒\"/>\n          </FormItem>\n          <FormItem label=\"有序消息\">\n            <i-switch v-model=\"formItem.switch.order\" size=\"large\">\n              <template #open>\n                <span>On</span>\n              </template>\n              <template #close>\n                <span>Off</span>\n              </template>\n            </i-switch>\n          </FormItem>\n          <Card v-if=\"formItem.switch.order\" style=\"margin-left: 100px\">\n            <template #title>\n              <Icon type=\"md-settings\"/>\n              有序消息字段\n              <Button icon=\"ios-refresh\" size=\"small\" type=\"primary\" :loading=\"commonColumnLoading\"\n                      @click=\"getCommonColumns\" style=\"margin-left: 50px\">获取公共字段\n              </Button>\n            </template>\n            <FormItem label=\"字段\">\n              <Select v-model=\"formItem.orderKey\" filterable allow-create @on-create=\"handleCreateColumn\"\n                      style=\"width: 200px\" placeholder=\"不选表示按主键投递\" clearable>\n                <Option v-for=\"item in formItem.constants.columnsForChose\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n              </Select>\n            </FormItem>\n          </Card>\n          <FormItem label=\"消息包括字段\">\n            <template v-if=\"filterReadOnly\">\n              <div v-if=\"formItem.filterFields != null && formItem.filterFields.length > 0\">\n                {{ formItem.filterFields.join(', ') }}\n              </div>\n              <div v-else class=\"array-item\">\n                <tag color=\"blue\">全部列</tag>\n              </div>\n            </template>\n            <template v-else>\n              <i-switch v-model=\"formItem.switch.fields\" size=\"large\">\n                <template #open>\n                  <span>On</span>\n                </template>\n                <template #close>\n                  <span>Off</span>\n                </template>\n              </i-switch>\n            </template>\n          </FormItem>\n          <template v-if=\"filterReadOnly\">\n            <FormItem label=\"仅在字段有更新时投递\">\n              <div>\n                <span v-if=\"formItem.sendOnlyUpdated\">是</span>\n                <span v-else>否</span>\n              </div>\n            </FormItem>\n            <FormItem label=\"投递方式\">\n              <div>\n                <span v-if=\"formItem.excludeColumn\">排除所选字段</span>\n                <span v-else>包含所选字段</span>\n              </div>\n            </FormItem>\n          </template>\n          <Card v-if=\"formItem.switch.fields\" style=\"margin-left: 100px\">\n            <template #title>\n              <Icon type=\"md-settings\"/>\n              消息包括字段\n              <Button icon=\"ios-refresh\" size=\"small\" type=\"primary\" :loading=\"commonColumnLoading2\"\n                      @click=\"() => getCommonColumns('fields')\" style=\"margin-left: 50px\">获取公共字段\n              </Button>\n            </template>\n            <FormItem label=\"字段\">\n              <Select v-model=\"formItem.filterFields\" filterable multiple\n                      style=\"width: 200px\" placeholder=\"不选表示消息包括全部字段\" clearable>\n                <Option v-for=\"item in formItem.constants.columnsForChose\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n              </Select>\n            </FormItem>\n            <Row>\n              <FormItem label=\"仅在字段有更新时投递\">\n                <Checkbox v-model=\"formItem.sendOnlyUpdated\"  :disabled=\"filterReadOnly\"></Checkbox>\n              </FormItem>\n              <FormItem label=\"是否仅排除所选字段\">\n                <Checkbox v-model=\"formItem.excludeColumn\"  :disabled=\"filterReadOnly\"></Checkbox>\n              </FormItem>\n            </Row>\n          </Card>\n        </Form>\n      </Col>\n      <Col span=\"11\">\n        <db-tables-preview :src-region-name=\"srcRegion\"\n                           :dst-region-name=\"null\"\n                           :db-name=\"formItem.dbName\"\n                           :table-names=\"formItem.tableName\"\n                           :mode=\"formItem.buildMode\"\n                           :replication-type=\"Number(1)\"\n        />\n      </Col>\n    </Row>\n    <Divider></Divider>\n    <Button :type=\"buttonTypeMap.get(formAction)\" @click=\"submitAll\" style=\"margin-left: 50px\"\n            :loading=\"dataLoading || commonColumnLoading || commonColumnLoading2\">{{\n        buttonTextMap.get(formAction) + ': ' + mqType\n      }}\n    </Button>\n  </div>\n</template>\n\n<script>\n\nimport DbTablesPreview from '@/components/v2/dbDrcBuild/dbTablesPreview.vue'\n\nexport default {\n  components: { DbTablesPreview },\n  FORM_ACTION_OPTION: {\n    CREATE: 'create',\n    EDIT: 'edit',\n    DELETE: 'delete'\n  },\n  name: 'dbMqConfig',\n  props: {\n    configData: {},\n    mqType: String,\n    srcRegion: String,\n    dstRegion: String,\n    dalclusterName: String,\n    dbNames: Array,\n    formAction: String,\n    filterReadOnly: Boolean\n  },\n  emits: ['finished'],\n  data () {\n    return {\n      meta: {\n        rowsFilterId: null,\n        colsFilterId: null,\n        dbReplicationIds: [],\n        originLogicTableConfig: {}\n      },\n      formItem: {\n        bu: null,\n        buildMode: 2,\n        dbName: null,\n        tableName: null,\n        topic: null,\n        orderKey: null,\n        excludeFilterTypes: [],\n        filterFields: [],\n        sendOnlyUpdated: false,\n        excludeColumn: false,\n        switch: {\n          order: false\n        },\n        constants: {\n          columnsForChose: [],\n          buForChosen: []\n        },\n        delayTime: 0\n      },\n      checkTableDataList: [],\n      table: {\n        dbMhaTableLoading: false,\n        dbMhaTableColumn: [\n          {\n            title: 'DB名',\n            key: 'dbName'\n          },\n          {\n            title: '源集群',\n            key: 'srcMhaName',\n            render: (h, params) => {\n              const row = params.row\n              const mha = row.srcMha\n              if (mha != null) {\n                return h('div', [\n                  h('span', mha.name),\n                  h('span', {\n                    style:\n                        {\n                          float: 'right',\n                          color: '#ababab'\n                        }\n                  }, mha.regionName + '(' + mha.dcName + ')')\n                ])\n              }\n            }\n          },\n          {\n            title: '目标集群',\n            key: 'dstMhaName',\n            render: (h, params) => {\n              const row = params.row\n              const mha = row.dstMha\n              if (mha != null) {\n                return h('div', [\n                  h('span', mha.name),\n                  h('span', {\n                    style:\n                        {\n                          float: 'right',\n                          color: '#ababab'\n                        }\n                  }, mha.regionName + '(' + mha.dcName + ')')\n                ])\n              }\n            }\n          }\n        ],\n        dbMhaTablePage: {\n          total: 0,\n          current: 1,\n          size: 5,\n          pageSizeOpts: [5, 10, 20, 100]\n        },\n        dbTableLoading: false,\n        dbTableColumn: [\n          {\n            title: '序号',\n            width: 75,\n            align: 'center',\n            fixed: 'left',\n            render: (h, params) => {\n              return h(\n                'span',\n                params.index + 1\n              )\n            }\n          },\n          {\n            title: '库名',\n            key: 'schema',\n            resizable: true\n          },\n          {\n            title: '表名',\n            key: 'table',\n            resizable: true\n          },\n          {\n            title: '结果',\n            align: 'center',\n            render: (h, params) => {\n              const row = params.row\n              const color = row.res !== 'ok' ? 'volcano' : 'green'\n              const text = row.res\n              return h('Tag', {\n                props: {\n                  color: color\n                }\n              }, text)\n            }\n          }\n        ],\n        dbTablePage: {\n          total: 0,\n          current: 1,\n          size: 5,\n          pageSizeOpts: [5, 10, 20, 100]\n        }\n      },\n      alertInfo: {\n        show: false,\n        successShow: false,\n        title: null,\n        message: null\n      },\n      buttonTextMap: new Map([\n        ['create', '新增 MQ投递'],\n        ['edit', '更新 MQ投递'],\n        ['delete', '删除 MQ投递']\n      ]),\n      buttonTypeMap: new Map([\n        ['create', 'success'],\n        ['edit', 'primary'],\n        ['delete', 'error']\n      ]),\n      dataLoading: false,\n      successSubmit: false,\n      commonColumnLoading: false,\n      commonColumnLoading2: false,\n      excludeFilterTypesForChose: [\n        {\n          value: 'D',\n          label: 'DELETE'\n        },\n        {\n          value: 'U',\n          label: 'UPDATE'\n        },\n        {\n          value: 'I',\n          label: 'INSERT'\n        }\n      ]\n    }\n  },\n  methods: {\n    getParams: function () {\n      const param = {}\n      param.buName = this.formItem.buName\n      param.tag = this.formItem.tag\n      param.mode = this.formItem.buildMode\n      param.srcRegionName = this.srcRegion\n      param.replicationType = 1\n\n      if (this.gtidConfigurable) {\n        param.gtidInit = this.formItem.gtidInit\n      }\n\n      param.tblsFilterDetail = {\n        tableNames: this.formItem.tableName\n      }\n      param.dbName = this.formItem.dbName\n      return param\n    },\n    getEditParams: function () {\n      const param = {}\n      param.dalclusterName = this.dalclusterName\n      param.dbReplicationIds = this.meta.dbReplicationIds\n      param.dbNames = this.dbNames\n      param.srcRegionName = this.srcRegion\n\n      param.logicTableConfig = {\n        logicTable: this.formItem.tableName,\n        dstLogicTable: this.formItem.topic\n      }\n      param.originLogicTableConfig = this.meta.originLogicTableConfig\n      param.mqConfig = {\n        bu: this.formItem.bu,\n        mqType: this.mqType,\n        serialization: 'json',\n        persistent: false,\n        order: this.formItem.switch.order,\n        orderKey: this.formItem.switch.orderKey === '' ? null : this.formItem.orderKey,\n        excludeFilterTypes: this.formItem.excludeFilterTypes,\n        delayTime: this.formItem.delayTime,\n        filterFields: this.formItem.filterFields,\n        sendOnlyUpdated: this.formItem.sendOnlyUpdated,\n        excludeColumn: this.formItem.excludeColumn\n      }\n      console.log(param)\n      return param\n    },\n    async getCommonColumns (method) {\n      const params = this.getParams()\n      this.formItem.constants.columnsForChose = []\n      if (method === 'fields') {\n        this.commonColumnLoading2 = true\n      } else {\n        this.commonColumnLoading = true\n      }\n      await this.axios.get('/api/drc/v2/autoconfig/commonColumns', {\n        params: this.flattenObj(params)\n      }).then(response => {\n        if (response.data.status === 1) {\n          this.$Message.error('查询公共列名失败，请手动添加：' + response.data.message)\n        } else {\n          this.formItem.constants.columnsForChose = response.data.data\n          this.$Message.info('查询公共列名数：' + response.data.data.length)\n        }\n      }).catch(message => {\n        this.$Message.error('查询公共列名异常: ' + message)\n      }).finally(() => {\n        if (method === 'fields') {\n          this.commonColumnLoading2 = false\n        } else {\n          this.commonColumnLoading = false\n        }\n      })\n    },\n    handleCreateColumn (val) {\n      if (this.contains(this.formItem.constants.columnsForChose, val)) {\n        alert('已有项禁止创建')\n        return\n      }\n      if (val === '' || val === undefined || val === null) {\n        alert('字段不能为空')\n        return\n      }\n      this.formItem.constants.columnsForChose.push(val)\n    },\n    refreshTopicBu () {\n      if (this.formItem.topic) {\n        this.formItem.bu = this.formItem.topic.split('.')[0]\n      }\n    },\n    async afterEnterTableName () {\n      await this.getTableInfo()\n    },\n    flattenObj (ob) {\n      const result = {}\n      for (const i in ob) {\n        if ((typeof ob[i]) === 'object' && !Array.isArray(ob[i])) {\n          const temp = this.flattenObj(ob[i])\n          for (const j in temp) {\n            result[i + '.' + j] = temp[j]\n          }\n        } else {\n          result[i] = ob[i]\n        }\n      }\n      return result\n    },\n    async refresh () {\n      this.formItem.dbName = this.dbNames.join(',')\n      if (this.configData) {\n        console.log('edit panel ', JSON.stringify(this.configData))\n        this.formItem.tableName = this.configData.config.logicTable\n        this.formItem.topic = this.configData.config.dstLogicTable\n        this.formItem.orderKey = this.configData.orderKey\n        this.formItem.switch.order = this.configData.order\n        this.formItem.excludeFilterTypes = this.configData.excludeFilterTypes\n        this.formItem.delayTime = this.configData.delayTime\n        this.formItem.filterFields = this.configData.filterFields\n        this.formItem.sendOnlyUpdated = this.configData.sendOnlyUpdated\n        this.formItem.excludeColumn = this.configData.excludeColumn\n        this.refreshTopicBu()\n        this.getCommonColumns()\n        this.meta.dbReplicationIds = this.configData.dbReplicationIds\n        this.meta.originLogicTableConfig = this.configData.config\n        this.meta.originMyConfig = this.configData.config\n      } else {\n        console.log('insert new config')\n      }\n    },\n    getBuListFromQmq () {\n      this.axios.get('/api/drc/v2/messenger/qmq/bus')\n        .then(response => {\n          if (response.data.status === 1) {\n            window.alert('从查询qmq 部门信息失败!')\n          } else {\n            this.formItem.constants.buForChosen = response.data.data\n          }\n        })\n    },\n    async submitAll () {\n      const that = this\n      that.alertInfo.show = false\n      that.alertInfo.successShow = false\n      that.successSubmit = false\n      const params = this.getEditParams()\n      // if (!this.checkParam(params)) {\n      //   return\n      // }\n      that.dataLoading = true\n      await that.axios.post('/api/drc/v2/autoconfig/dbMq/' + this.formAction, params)\n        .then(response => {\n          const data = response.data\n          const success = data.status === 0\n          if (success) {\n            that.$Message.success('提交成功')\n            that.successSubmit = true\n            that.alertInfo.successShow = true\n            that.alertInfo.message = null\n            that.alertInfo.title = '提交成功'\n            that.$emit('finished')\n          } else {\n            that.$Message.warning('提交失败: ' + data.message)\n            that.alertInfo.show = true\n            that.alertInfo.title = '提交失败'\n            that.alertInfo.message = data.message\n          }\n        })\n        .catch(message => {\n          that.$Message.error('提交异常: ' + message)\n        })\n        .finally(() => {\n          that.dataLoading = false\n        })\n    },\n    rowsFilterCreateParamInit () {\n      return {\n        mode: 1,\n        drcStrategyId: 2000000002,\n        routeStrategyId: 0,\n        udlColumns: [],\n        columns: [],\n        context: '',\n        illegalArgument: false,\n        fetchMode: 0\n      }\n    },\n    columnsFilterCreateParamInit () {\n      return {\n        mode: null,\n        columns: []\n      }\n    }\n  },\n  computed: {\n    preCheckTablePage () {\n      const data = this.checkTableDataList\n      const start = this.table.dbTablePage.current * this.table.dbTablePage.size - this.table.dbTablePage.size\n      const end = start + this.table.dbTablePage.size\n      return [...data].slice(start, end)\n    },\n    useTripUdlOrUidMode () {\n      return [this.formItem.constants.rowsFilter.filterMode.TRIP_UDL, this.formItem.constants.rowsFilter.filterMode.TRIP_UDL_UID].includes(this.formItem.rowsFilterCreateParam.mode)\n    },\n    hasUdlColumn () {\n      return this.formItem.rowsFilterCreateParam.udlColumns.length !== 0\n    },\n    fillContextByRegion () {\n      return this.formItem.rowsFilterCreateParam.fetchMode === this.formItem.constants.rowsFilter.fetchMode.RPC\n    },\n    hasUidColumn () {\n      return this.formItem.rowsFilterCreateParam.columns.length !== 0\n    },\n    showUdlConfigDetail () {\n      return this.formItem.rowsFilterCreateParam.mode === this.formItem.constants.rowsFilter.filterMode.TRIP_UDL_UID || this.hasUdlLegalConfig || !this.hasUidLegalConfig\n    },\n    showUidConfigDetail () {\n      return this.formItem.rowsFilterCreateParam.mode === this.formItem.constants.rowsFilter.filterMode.TRIP_UDL_UID || this.hasUidLegalConfig || !this.hasUdlLegalConfig\n    },\n    hasUdlLegalConfig () {\n      return this.formItem.rowsFilterCreateParam.udlColumns.length !== 0 && this.formItem.rowsFilterCreateParam.drcStrategyId != null && this.formItem.rowsFilterCreateParam.drcStrategyId > 0\n    },\n    hasUidLegalConfig () {\n      return this.hasUidColumn\n    }\n  },\n  created () {\n    this.getBuListFromQmq()\n    this.refresh()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqConfig.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqConfig.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./dbMqConfig.vue?vue&type=template&id=bd49533c&scoped=true\"\nimport script from \"./dbMqConfig.vue?vue&type=script&lang=js\"\nexport * from \"./dbMqConfig.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bd49533c\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div :style=\"{padding: '1px 1px',height: '100%'}\">\n    <Table style=\"margin-top: 20px\" stripe :columns=\"columns\" :data=\"tableData\" :loading=\"dataLoading\" border\n           ref=\"multipleTable\">\n      <template slot=\"action\" slot-scope=\"{ row, index }\">\n        <Button type=\"primary\" size=\"small\" style=\"margin-right: 5px\" @click=\"goToUpdateConfig(row, index)\">修改\n        </Button>\n        <Button type=\"error\" size=\"small\" style=\"margin-right: 5px\" @click=\"goToDeleteConfig(row, index)\">删除\n        </Button>\n      </template>\n    </Table>\n    <br/>\n    <Button type=\"success\" @click=\"goToInsertConfig\" icon=\"md-add\">\n      新增\n    </Button>\n    <Modal v-model=\"editModal.open\" width=\"1200px\" :footer-hide=\"true\" :title=\"actionTitle\">\n      <db-mq-config ref=\"dbReplicationConfigComponent\" @finished=\"finishConfig\"\n                    v-if=\"editModal.open\"\n                    :dalcluster-name=\"dalclusterName\"\n                    :mq-type=\"mqType\"\n                    :config-data=\"selectedRow\"\n                    :src-region=\"srcRegion\"\n                    :dst-region=\"srcRegion\"\n                    :db-names=\"dbNames\"\n                    :form-action=\"action\"\n                    :filter-read-only=\"filterReadOnly\"\n      />\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport DbMqConfig from '@/components/v2/dbDrcBuild/dbMqConfig.vue'\n\nexport default {\n  name: 'mqTables',\n  components: { DbMqConfig },\n  props: {\n    dalclusterName: String,\n    mqType: String,\n    dbName: String,\n    dbNames: Array,\n    srcRegion: String,\n    dstRegion: String,\n    tableData: Array,\n    dataLoading: Boolean\n  },\n  emits: ['updated'],\n  data () {\n    return {\n      selectedRow: {},\n      action: null,\n      actionTitleMap: new Map([\n        ['create', '新增 MQ投递配置'],\n        ['edit', '更新 MQ投递配置'],\n        ['delete', '⚠️删除 MQ投递配置']\n      ]),\n      editModal: {\n        open: false\n      },\n      filterReadOnly: false,\n      columns: [\n        {\n          title: '序号',\n          width: 75,\n          align: 'center',\n          fixed: 'left',\n          render: (h, params) => {\n            return h(\n              'span',\n              params.index + 1\n            )\n          }\n        },\n        {\n          title: '表名',\n          key: 'config.logicTable',\n          render: (h, params) => {\n            const config = params.row.config\n            return h(\n              'span',\n              config.logicTable\n            )\n          }\n        },\n        {\n          title: '主题',\n          key: 'topic',\n          render: (h, params) => {\n            const config = params.row.config\n            return h(\n              'span',\n              config.dstLogicTable\n            )\n          }\n        },\n        {\n          title: '有序',\n          key: 'order',\n          width: 100,\n          render: (h, params) => {\n            const row = params.row\n            const color = row.order ? 'orange' : 'blue'\n            const text = row.order ? '有序' : '无序'\n            return h('Tag', {\n              props: {\n                color: color\n              }\n            }, text)\n          }\n        },\n        {\n          title: '有序相关字段',\n          key: 'orderKey',\n          width: 100,\n          render: (h, params) => {\n            const row = params.row\n            const text = row.order ? (row.orderKey ? row.orderKey : '主键') : ''\n            return h('span', text)\n          }\n        },\n        {\n          title: '过滤类型',\n          width: 70,\n          key: 'excludeFilterTypes',\n          render: (h, params) => {\n            const excludeFilterTypes = params.row.excludeFilterTypes\n            const formattedString = excludeFilterTypes.join(', ')\n            return h('span', formattedString)\n          }\n        },\n        {\n          title: '延迟投递(s)',\n          width: 50,\n          key: 'delayTime',\n          render: (h, params) => {\n            const time = params.row.delayTime === 0 ? '' : params.row.delayTime\n            return h('span', time)\n          }\n        },\n        {\n          title: '仅更新时投递',\n          key: 'sendOnlyUpdated',\n          width: 50,\n          render: (h, params) => {\n            const row = params.row\n            const text = row.sendOnlyUpdated ? '✓' : ''\n            return h('span', text)\n          }\n        },\n        {\n          title: '投递方式',\n          key: 'excludeColumn',\n          width: 70,\n          render: (h, params) => {\n            const row = params.row\n            const text = row.excludeColumn ? '排除' : '包括'\n            return h('span', text)\n          }\n        },\n        {\n          title: '投递字段',\n          key: 'filterFields',\n          width: 100,\n          render: (h, params) => {\n            const value = params.row.filterFields !== null ? params.row.filterFields.join(',') : '全部'\n            return h('span', value)\n          }\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          align: 'center'\n        },\n        {\n          title: '修改时间',\n          key: 'filterFields',\n          render: (h, params) => {\n            const timestamp = params.row.datachangeLasttime\n            const date = new Date(timestamp)\n            const formattedDate = date.toLocaleString() // 使用本地时间格式\n            return h('span', formattedDate)\n          }\n        }\n      ]\n    }\n  },\n  methods: {\n    async goToInsertConfig () {\n      this.selectedRow = null\n      this.action = DbMqConfig.FORM_ACTION_OPTION.CREATE\n      this.editModal.open = true\n      this.filterReadOnly = false\n    },\n    async goToUpdateConfig (row, index) {\n      this.selectedRow = row\n      this.action = DbMqConfig.FORM_ACTION_OPTION.EDIT\n      this.editModal.open = true\n      this.filterReadOnly = true\n    },\n    async goToDeleteConfig (row, index) {\n      this.selectedRow = row\n      this.action = DbMqConfig.FORM_ACTION_OPTION.DELETE\n      this.editModal.open = true\n    },\n    finishConfig () {\n      this.selectedRow = null\n      this.editModal.open = false\n      this.$emit('updated')\n    }\n  },\n  computed: {\n    actionTitle () {\n      return this.actionTitleMap.get(this.action) + ': ' + this.mqType\n    }\n  },\n  created () {\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mqTables.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mqTables.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./mqTables.vue?vue&type=template&id=64f931f2&scoped=true\"\nimport script from \"./mqTables.vue?vue&type=script&lang=js\"\nexport * from \"./mqTables.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"64f931f2\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{style:({padding: '1px 1px',height: '100%'})},[_c('Collapse',{model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},_vm._l((_vm.mhaMqDtos),function(mhaMqDto,index){return _c('Panel',{key:mhaMqDto.srcMha.name +'-> mq',attrs:{\"name\":String(index)},scopedSlots:_vm._u([{key:\"content\",fn:function(){return [_c('Button',{staticStyle:{\"margin-bottom\":\"10px\"},attrs:{\"icon\":\"ios-open-outline\"},on:{\"click\":function($event){return _vm.openModal(index)}}},[_vm._v(\" 打开详情\")]),_c('mha-db-mq-panel',{attrs:{\"mha-mq-dtos\":mhaMqDto}}),_c('Modal',{attrs:{\"width\":\"1500px\",\"footer-hide\":true},model:{value:(_vm.openDetailModal[index]),callback:function ($$v) {_vm.$set(_vm.openDetailModal, index, $$v)},expression:\"openDetailModal[index]\"}},[(_vm.openDetailModal[index])?_c('drc-mq-config',{ref:\"dbReplicationConfigComponent\",refInFor:true,attrs:{\"mq-type\":mhaMqDto.mhaMessengerDto.mqType,\"mha-name\":mhaMqDto.srcMha.name,\"dc\":mhaMqDto.srcMha.dcName}}):_vm._e()],1)]},proxy:true}],null,true)},[_vm._v(\" \"+_vm._s(mhaMqDto.srcMha.name + ' ------ ' + ([mhaMqDto.mhaDbReplications.length] + 'DB'))+\" \")])}),1),_c('br'),_c('Button',{attrs:{\"type\":\"primary\",\"icon\":\"md-sync\"},on:{\"click\":_vm.goToSwitchMessengers}},[_vm._v(\" 切换Messenger生效配置 \")]),_c('br')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.mhaMqDtos.mhaMessengerDto)?_c('Table',{attrs:{\"stripe\":\"\",\"border\":\"\",\"columns\":_vm.columns,\"data\":_vm.mhaDbReplications}}):_vm._e(),(_vm.mhaMqDtos.mhaMessengerDto)?_c('Table',{attrs:{\"stripe\":\"\",\"border\":\"\",\"columns\":_vm.mhaColumns,\"data\":[_vm.mhaMqDtos]}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <Table stripe border :columns=\"columns\" :data=\"mhaDbReplications\" v-if=\"!mhaMqDtos.mhaMessengerDto\">\n    </Table>\n    <Table stripe border :columns=\"mhaColumns\" :data=\"[mhaMqDtos]\" v-if=\"mhaMqDtos.mhaMessengerDto\">\n    </Table>\n  </div>\n\n</template>\n\n<script>\nimport prettyMilliseconds from 'pretty-ms'\n\nexport default {\n  name: 'mhaDbMqPanel',\n  props: {\n    mhaMqDtos: {}\n  },\n  data () {\n    return {\n      mhaDbReplications: this.mhaMqDtos.mhaDbReplications,\n      value: ['1'],\n      delayDataLoading: false,\n      columns: [\n        {\n          title: '类型',\n          width: 80,\n          render: (h, params) => {\n            const row = params.row\n            let text = 'none'\n            let type = 'error'\n            let disabled = false\n            switch (row.transmissionType) {\n              case 'simplex':\n                text = '单'\n                type = 'info'\n                break\n              case 'duplex':\n                text = '双'\n                type = 'success'\n                break\n              default:\n                text = '无'\n                disabled = true\n                break\n            }\n            return h('Button', {\n              props: {\n                type: type,\n                size: 'small',\n                disabled: disabled\n              },\n              on: {\n                click: () => {\n                  this.showModal(row)\n                }\n              }\n            }, text)\n          }\n        },\n        {\n          title: '延迟',\n          key: 'drcStatus',\n          width: 100,\n          align: 'center',\n          renderHeader: (h, params) => {\n            return h('span', [\n              h('span', '延迟'),\n              this.replicationIds && this.replicationIds.length !== 0 && h('Button', {\n                on: {\n                  click: async () => {\n                    await this.getMhaMessengerDelay()\n                  }\n                },\n                props: {\n                  loading: this.delayDataLoading,\n                  size: 'small',\n                  shape: 'circle',\n                  type: 'default',\n                  icon: 'md-refresh'\n                }\n              })\n            ])\n          },\n          render: (h, params) => {\n            const row = params.row\n            let color, text\n            if (row.drcStatus === true) {\n              if (row.delay != null) {\n                text = prettyMilliseconds(row.delay, { compact: true })\n                if (row.delay > 10000) {\n                  color = 'warning'\n                } else {\n                  color = 'success'\n                }\n              } else {\n                text = '已接入'\n                color = 'blue'\n              }\n            } else {\n              text = '未接入'\n              color = 'default'\n            }\n            return h('Tag', {\n              props: {\n                color: color\n              }\n            }, text)\n          }\n        },\n        {\n          title: 'DB 名',\n          key: 'srcDbName',\n          render: (h, params) => {\n            return h('p', params.row.src.dbName)\n          }\n        },\n        {\n          title: 'messenger',\n          key: 'srcDbName',\n          render: (h, params) => {\n            return h('p', params.row.dbMessengerDto ? params.row.dbMessengerDto.ips.join(', ') : null)\n          }\n        }\n      ],\n      mhaColumns: [\n        {\n          title: '延迟',\n          key: 'drcStatus',\n          width: 100,\n          align: 'center',\n          renderHeader: (h, params) => {\n            return h('span', [\n              h('span', '延迟'),\n              this.mhaMqDtos.mhaMessengerDto.ips && h('Button', {\n                on: {\n                  click: async () => {\n                    await this.getMhaMessengerDelay()\n                  }\n                },\n                props: {\n                  loading: this.delayDataLoading,\n                  size: 'small',\n                  shape: 'circle',\n                  type: 'default',\n                  icon: 'md-refresh'\n                }\n              })\n            ])\n          },\n          render: (h, params) => {\n            const row = params.row\n            let color, text\n            if (row.mhaMessengerDto.ips) {\n              if (row.delay != null) {\n                text = prettyMilliseconds(row.delay, { compact: true })\n                if (row.delay > 10000) {\n                  color = 'warning'\n                } else {\n                  color = 'success'\n                }\n              } else {\n                text = '已接入'\n                color = 'blue'\n              }\n            } else {\n              text = '未接入'\n              color = 'default'\n            }\n            return h('Tag', {\n              props: {\n                color: color\n              }\n            }, text)\n          }\n        },\n        {\n          title: '类型',\n          width: 100,\n          key: '',\n          render: (h, params) => {\n            return h('p', 'mha 同步')\n          }\n        },\n        {\n          title: 'DB 名',\n          key: 'srcDbName',\n          render: (h, params) => {\n            return h('p', params.row.mhaDbReplications.map(item => item.src.dbName).join(','))\n          }\n        },\n        {\n          title: 'messenger',\n          key: '',\n          render: (h, params) => {\n            return h('p', params.row.mhaMessengerDto.ips.join(','))\n          }\n        },\n        {\n          title: 'initGtid',\n          key: '',\n          render: (h, params) => {\n            return h('p', params.row.mhaMessengerDto.gtidInit)\n          }\n        },\n        {\n          title: '修改时间',\n          key: 'filterFields',\n          render: (h, params) => {\n            const timestamp = params.row.mhaMessengerDto.datachangeLasttime\n            const date = new Date(timestamp)\n            const formattedDate = date.toLocaleString() // 使用本地时间格式\n            return h('span', formattedDate)\n          }\n        }\n      ]\n    }\n  },\n  methods: {\n    showModal (row) {\n      this.$Message.info('还未上线，敬请期待')\n    },\n    async getMhaMessengerDelay () {\n      this.delayDataLoading = true\n      this.axios.post('/api/drc/v2/messenger/delay', {\n        mqType: this.mhaMqDtos.mhaMessengerDto.mqType,\n        mhas: [this.mhaMqDtos.srcMha.name],\n        dbs: this.mhaMqDtos.mhaDbReplications.map(item => item.src.dbName)\n      })\n        .then(response => {\n          const delays = response.data.data[0].delayInfoDto.delay\n          this.$set(this.mhaMqDtos, 'delay', delays)\n        })\n        .catch(message => {\n          console.log(message)\n          // this.$Message.error('查询 MHA 延迟异常: ' + message)\n        })\n        .finally(() => {\n          this.delayDataLoading = false\n        })\n    }\n  },\n  computed: {\n    replicationIds () {\n      return this.mhaDbReplications\n        .filter(item => item.drcStatus === true)\n        .map(item => item.id)\n        .join(',')\n    }\n  },\n  created () {\n    this.getMhaMessengerDelay()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mhaDbMqPanel.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mhaDbMqPanel.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./mhaDbMqPanel.vue?vue&type=template&id=fe447ac0&scoped=true\"\nimport script from \"./mhaDbMqPanel.vue?vue&type=script&lang=js\"\nexport * from \"./mhaDbMqPanel.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fe447ac0\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div :style=\"{padding: '1px 1px',height: '100%'}\">\n    <Collapse v-model=\"value\">\n      <Panel v-for=\"(mhaMqDto, index) in mhaMqDtos\"\n             :key=\"mhaMqDto.srcMha.name +'-> mq'\"\n             :name=\"String(index)\">\n        {{ mhaMqDto.srcMha.name + ' ------ ' + ([mhaMqDto.mhaDbReplications.length] + 'DB') }}\n        <template #content>\n          <Button icon=\"ios-open-outline\" @click=\"openModal(index)\" style=\"margin-bottom: 10px\"> 打开详情</Button>\n          <mha-db-mq-panel :mha-mq-dtos=\"mhaMqDto\"/>\n              <Modal v-model=\"openDetailModal[index]\" width=\"1500px\" :footer-hide=\"true\">\n                <drc-mq-config ref=\"dbReplicationConfigComponent\" v-if=\"openDetailModal[index]\"\n                              :mq-type=\"mhaMqDto.mhaMessengerDto.mqType\"\n                              :mha-name=\"mhaMqDto.srcMha.name\"\n                              :dc=\"mhaMqDto.srcMha.dcName\"\n                />\n              </Modal>\n        </template>\n      </Panel>\n    </Collapse>\n    <br/>\n    <Button type=\"primary\" @click=\"goToSwitchMessengers\" icon=\"md-sync\">\n      切换Messenger生效配置\n    </Button>\n    <br/>\n  </div>\n</template>\n\n<script>\n\nimport MhaDbMqPanel from '@/components/v2/dbDrcBuild/mhaDbMqPanel.vue'\nimport DrcMqConfig from '@/components/v2/mhaMessengers/drcMqConfig.vue'\n\nexport default {\n  name: 'mhaMqPanel',\n  components: { DrcMqConfig, MhaDbMqPanel },\n  props: {\n    mhaMqDtos: Array\n  },\n  emits: ['updated'],\n  data () {\n    return {\n      value: [],\n      openDetailModal: [],\n      dataLoading: false\n    }\n  },\n  methods: {\n    openModal (index) {\n      console.log(this.mhaMqDtos)\n      this.$set(this.openDetailModal, index, true)\n    },\n    goToSwitchMessengers () {\n      this.$Modal.confirm({\n        title: '切换Messenger',\n        content: '<p>请确认</p>',\n        loading: true,\n        onOk: () => {\n          this.switchMessengers()\n        }\n      })\n    },\n    switchMessengers () {\n      const params = this.getSwitchParams()\n      console.log(params)\n      this.dataLoading = true\n      this.axios.post('/api/drc/v2/autoconfig/switchMessengers', params)\n        .then(response => {\n          const data = response.data\n          const success = data.status === 0\n          if (success) {\n            this.$Message.success('提交成功')\n          } else {\n            this.$Message.warning('提交失败: ' + data.message)\n          }\n        })\n        .catch(message => {\n          this.$Message.error('提交异常: ' + message)\n        })\n        .finally(() => {\n          this.$Modal.remove()\n          this.dataLoading = false\n          this.$emit('updated')\n        })\n    },\n    getSwitchParams () {\n      return this.mhaMqDtos.map((item) => {\n        return {\n          srcMhaName: item.srcMha.name,\n          mqType: item.mhaMessengerDto.mqType,\n          dbNames: item.mhaDbReplications.map((mhaDbReplication) => {\n            return mhaDbReplication.src.dbName\n          })\n        }\n      })\n    }\n  },\n  created () {\n    console.log('mhaMqDtos', this.mhaMqDtos)\n    this.openDetailModal = Array(this.mhaMqDtos.length).fill(false)\n    if (this.mhaMqDtos.length === 1) {\n      this.value = ['0']\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mhaMqPanel.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mhaMqPanel.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./mhaMqPanel.vue?vue&type=template&id=99adf070&scoped=true\"\nimport script from \"./mhaMqPanel.vue?vue&type=script&lang=js\"\nexport * from \"./mhaMqPanel.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"99adf070\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <base-component>\n    <Breadcrumb :style=\"{margin: '15px 0 15px 185px', position: 'fixed'}\">\n      <BreadcrumbItem to=\"/home\">首页</BreadcrumbItem>\n      <BreadcrumbItem to=\"/v2/dbMqBuildV2\">DB粒度 Mq</BreadcrumbItem>\n    </Breadcrumb>\n    <Content class=\"content\"\n             :style=\"{padding: '10px', background: '#ffffff', margin: '50px -250px 111px 185px', zIndex: '1'}\">\n      <Row :gutter=10 align=\"middle\">\n        <Col span=\"18\">\n          <Form :model=\"formItem\" :label-width=\"100\" style=\"margin-right: 20px;margin-top: 10px\">\n            <FormItem label=\"消息类型\" :required=true>\n              <Select v-model=\"meta.mqType\"\n                      @on-change=\"selectDb\"\n                      placeholder=\"mqType\">\n                <Option v-for=\"item in mqTypeList\" :value=\"item\" :key=\"item\">{{\n                    item\n                  }}\n                </Option>\n              </Select>\n            </FormItem>\n            <FormItem label=\"数据库\" :required=true>\n              <Select\n                v-model=\"meta.dbName\"\n                filterable\n                :disabled=\"!!meta.fixDb\"\n                placeholder=\"请搜索数据库信息\"\n                @on-change=\"selectDb\"\n                :remote-method=\"getExistDb\"\n                :loading=\"dataLoading\">\n                <Option v-for=\"(option, index) in meta.dbOptions\" :value=\"option.dbName\" :key=\"index\">{{ option.dbName }}</Option>\n              </Select>\n            </FormItem>\n            <FormItem label=\"同步方向\" :required=true>\n              <RadioGroup v-model=\"selectedExistReplication\" button-style=\"solid\"\n                          @on-change=\"afterSelectExistReplication\">\n                <Radio v-for=\"items in meta.existReplicationRegionOptions\"\n                       :key=\"items.srcRegionName\"\n                       :label=\"items.srcRegionName\" border>\n                  {{ items.srcRegionName  }}\n                </Radio>\n              </RadioGroup>\n              <Button type=\"primary\" icon=\"md-add\" ghost @click=\"goToCreateReplication\">新增</Button>\n              <Modal v-model=\"createModal.open\" width=\"1200px\" :footer-hide=\"true\" title=\"创建同步\">\n                <mha-preview v-if=\"createModal.open\" :db-name=\"meta.dbName\" :replication-type=\"replicationType\" @updated=\"selectDb\"\n                             :exist-replication-region-options=\"meta.existReplicationRegionOptions\"></mha-preview>\n              </Modal>\n            </FormItem>\n            <Divider orientation=\"left\">消息投递配置</Divider>\n            <Card style=\"width:100%\">\n              <mq-tables :dalcluster-name=\"drcConfig.dalclusterName\" :table-data=\"drcConfig.logicTableSummaryDtos\" :data-loading=\"configDataLoading\"\n                         :src-region=\"meta.srcRegionName\" :dst-region=\"meta.dstRegionName\" :db-name=\"meta.dbName\"\n                         :db-names=\"drcConfig.dbNames\" :mq-type=\"meta.mqType\" @updated=\"getDrcConfig\"\n              />\n            </Card>\n            <Divider orientation=\"left\">DB</Divider>\n            <Card style=\"width:100%\">\n              <mha-mq-panel v-if=\"drcConfig.mhaMqDtos\" :mha-mq-dtos=\"drcConfig.mhaMqDtos\"  @updated=\"getDrcConfig\"/>\n            </Card>\n          </Form>\n        </Col>\n      </Row>\n    </Content>\n  </base-component>\n</template>\n<script>\n\nimport MhaPreview from '@/components/v2/dbDrcBuild/mhaPreview.vue'\nimport MqTables from '@/components/v2/dbDrcBuild/mqTables.vue'\nimport MhaMqPanel from '@/components/v2/dbDrcBuild/mhaMqPanel.vue'\n\nexport default {\n  components: { MhaMqPanel, MqTables, MhaPreview },\n  data () {\n    return {\n      createModal: {\n        open: false\n      },\n      mqTypeList: this.constant.mqTypeList,\n      dataLoading: false,\n      configDataLoading: false,\n      selectedExistReplication: this.$route.query.srcRegionName,\n      formItem: {\n        srcRegionName: null,\n        dstRegionName: null\n      },\n      drcConfig: {},\n      meta: {\n        mqType: this.$route.query.mqType,\n        dbName: this.$route.query.dbName,\n        srcRegionName: this.$route.query.srcRegionName,\n        dstRegionName: this.$route.query.dstRegionName,\n        fixDb: this.$route.query.fixDb,\n        regionOptions: [],\n        dbOptions: [],\n        existReplicationRegionOptions: []\n      },\n      mqTypeToReplicationType: this.constant.mqTypeToReplicationType\n    }\n  },\n  methods: {\n    getParams: function () {\n      const param = {}\n      param.dbName = this.meta.dbName\n      param.srcRegionName = this.meta.srcRegionName\n      param.dstRegionName = this.meta.dstRegionName\n      param.mqType = this.meta.mqType\n      return param\n    },\n    async getExistDb (dbName) {\n      if (dbName === null || dbName.length === null || dbName.length <= 0) {\n        return []\n      }\n      const that = this\n      that.dataLoading = true\n      await that.axios.get('/api/drc/v2/autoconfig/getExistDb', {\n        params: {\n          dbName: dbName\n        }\n      })\n        .then(response => {\n          const data = response.data.data\n          if (data) {\n            that.meta.dbOptions = data\n          } else {\n            that.$Message.warning('查询DB失败')\n          }\n        })\n        .catch(message => {\n          that.$Message.error('查询DB异常: ' + message)\n        })\n        .finally(() => {\n          that.dataLoading = false\n        })\n    },\n    async selectDb () {\n      await this.getExistReplicationRegionOptions()\n      await this.getDrcConfig()\n    },\n    async getDrcConfig () {\n      this.createModal.open = false\n      this.resetPath()\n      const params = this.getParams()\n      this.drcConfig = {}\n      if (!params.dbName) {\n        this.$Message.warning('请先填写数据库')\n        return\n      }\n      if (!params.srcRegionName) {\n        return\n      }\n      this.configDataLoading = true\n      await this.axios.get('/api/drc/v2/autoconfig/getDbMqConfig', {\n        params: {\n          dbName: params.dbName,\n          mqType: params.mqType,\n          srcRegionName: params.srcRegionName\n        }\n      })\n        .then(response => {\n          const data = response.data.data\n          const success = data && response.data.status === 0\n          if (success) {\n            console.log('getDrcConfig', data)\n            this.drcConfig = data\n            this.$Message.success('查询DRC配置成功 ')\n          } else {\n            this.$Message.warning('查询失败：' + response.data.message)\n          }\n        })\n        .catch(message => {\n          this.$Message.error('查询异常: ' + message)\n        })\n        .finally(() => {\n          this.configDataLoading = false\n        })\n    },\n    async afterSelectExistReplication () {\n      console.log('afterSelectExistReplication ', this.selectedExistReplication)\n      this.meta.srcRegionName = this.selectedExistReplication.trim()\n      this.getDrcConfig()\n    },\n    async getExistReplicationRegionOptions () {\n      const that = this\n      that.dataLoading = true\n      that.meta.existReplicationRegionOptions = []\n      const params = this.getParams()\n      await that.axios.get('/api/drc/v2/autoconfig/getExistDbMqConfigDcOption', {\n        params: {\n          dbName: params.dbName,\n          mqType: params.mqType\n        }\n      })\n        .then(response => {\n          const data = response.data.data\n          const success = data && response.data.status === 0\n          if (success) {\n            that.meta.existReplicationRegionOptions = data\n            if (that.meta.existReplicationRegionOptions.length > 0) {\n              that.$Message.success('查询到 ' + that.meta.existReplicationRegionOptions.length + ' 个可选同步方向')\n            }\n          } else {\n            that.meta.srcRegionName = null\n            that.meta.dstRegionName = null\n            that.$Message.warning('查询可选地域失败')\n          }\n        })\n        .catch(message => {\n          that.$Message.error('查询可选地域失败: ' + message)\n        })\n        .finally(() => {\n          that.dataLoading = false\n        })\n    },\n    async goToCreateReplication () {\n      this.createModal.open = true\n    },\n    resetPath () {\n      this.$router.replace({\n        query: {\n          mqType: this.meta.mqType,\n          dbName: this.meta.dbName,\n          srcRegionName: this.meta.srcRegionName,\n          dstRegionName: this.meta.dstRegionName,\n          fixDb: this.meta.fixDb\n        }\n        // eslint-disable-next-line handle-callback-err\n      }).catch(() => {\n      })\n    },\n    flattenObj (ob) {\n      const result = {}\n      for (const i in ob) {\n        if ((typeof ob[i]) === 'object' && !Array.isArray(ob[i])) {\n          const temp = this.flattenObj(ob[i])\n          for (const j in temp) {\n            result[i + '.' + j] = temp[j]\n          }\n        } else {\n          result[i] = ob[i]\n        }\n      }\n      return result\n    }\n  },\n  computed: {\n    replicationType () {\n      const type = this.mqTypeToReplicationType.get(this.meta.mqType)\n      console.log(this.meta.mqType, 'replicationType ', type)\n      if (type === undefined) {\n        return 1\n      }\n      return type\n    }\n  },\n  created () {\n    // this.getRegions()\n    this.axios.get('/api/drc/v2/permission/meta/mhaReplication/modify').then((response) => {\n      if (response.data.status === 403) {\n        this.$router.push('/nopermission')\n        return\n      }\n      if (this.meta.dbName) {\n        this.getExistReplicationRegionOptions()\n        this.getDrcConfig()\n      }\n    })\n  }\n}\n</script>\n\n<style>\n.drawer-footer {\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  border-top: 1px solid #e8e8e8;\n  padding: 10px 16px;\n  text-align: right;\n  background: #fff;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqBuildV2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqBuildV2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./dbMqBuildV2.vue?vue&type=template&id=1472200e\"\nimport script from \"./dbMqBuildV2.vue?vue&type=script&lang=js\"\nexport * from \"./dbMqBuildV2.vue?vue&type=script&lang=js\"\nimport style0 from \"./dbMqBuildV2.vue?vue&type=style&index=0&id=1472200e&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}