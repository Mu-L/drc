{"version":3,"sources":["webpack:///./src/views/v2/meta/dbMqBuildV2.vue?84a8","webpack:///./src/components/v2/mhaMessengers/drcMqConfig.vue?e20b","webpack:///src/components/v2/mhaMessengers/drcMqConfig.vue","webpack:///./src/components/v2/mhaMessengers/drcMqConfig.vue?adb6","webpack:///./src/components/v2/mhaMessengers/drcMqConfig.vue","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/views/v2/meta/dbMqBuildV2.vue?810e","webpack:///./src/components/v2/dbDrcBuild/mqTables.vue?73e5","webpack:///./src/components/v2/dbDrcBuild/dbMqConfig.vue?cf55","webpack:///src/components/v2/dbDrcBuild/dbMqConfig.vue","webpack:///./src/components/v2/dbDrcBuild/dbMqConfig.vue?7c07","webpack:///./src/components/v2/dbDrcBuild/dbMqConfig.vue","webpack:///src/components/v2/dbDrcBuild/mqTables.vue","webpack:///./src/components/v2/dbDrcBuild/mqTables.vue?bef5","webpack:///./src/components/v2/dbDrcBuild/mqTables.vue","webpack:///./src/components/v2/dbDrcBuild/mhaMqPanel.vue?641f","webpack:///./src/components/v2/dbDrcBuild/mhaDbMqPanel.vue?53b2","webpack:///src/components/v2/dbDrcBuild/mhaDbMqPanel.vue","webpack:///./src/components/v2/dbDrcBuild/mhaDbMqPanel.vue?ed76","webpack:///./src/components/v2/dbDrcBuild/mhaDbMqPanel.vue","webpack:///src/components/v2/dbDrcBuild/mhaMqPanel.vue","webpack:///./src/components/v2/dbDrcBuild/mhaMqPanel.vue?87a4","webpack:///./src/components/v2/dbDrcBuild/mhaMqPanel.vue","webpack:///src/views/v2/meta/dbMqBuildV2.vue","webpack:///./src/views/v2/meta/dbMqBuildV2.vue?fdca","webpack:///./src/views/v2/meta/dbMqBuildV2.vue?8d32"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticStyle","attrs","drc","_v","_s","mqType","model","value","callback","$$v","$set","expression","key","currentInstances","replicator","_l","item","ip","az","getRole","on","autoConfigReplicator","showMhaApplierConfig","messenger","type","autoConfigMessenger","_e","queryMhaMachineGtid","testSuccess1","queryMhaGtidCheckRes","goToMqConfigs","showDbMhaApplierConfig","getMhaDbMessenger","$event","handleReset","preCheckConfigure","submitConfig","minRows","maxRows","result","reviewConfigure","directives","name","rawName","domProps","target","composing","replicators","gtidCheck","resVo","staticRenderFns","component","$","$find","find","addToUnscopables","arrayMethodUsesToLength","FIND","SKIPS_HOLES","USES_TO_LENGTH","Array","proto","forced","callbackfn","arguments","length","undefined","style","margin","position","staticClass","padding","background","zIndex","formItem","selectDb","meta","fixDb","getExistDb","dataLoading","option","index","dbName","afterSelectExistReplication","selectedExistReplication","items","srcRegionName","goToCreateReplication","createModal","replicationType","existReplicationRegionOptions","drcConfig","dalclusterName","logicTableSummaryDtos","configDataLoading","dstRegionName","dbNames","getDrcConfig","mhaMqDtos","height","columns","tableData","scopedSlots","_u","fn","row","goToUpdateConfig","goToDeleteConfig","goToInsertConfig","actionTitle","editModal","selectedRow","srcRegion","action","filterReadOnly","finishConfig","formAction","alertInfo","message","proxy","title","constants","indexOf","_k","keyCode","preventDefault","afterEnterTableName","refreshTopicBu","label","switch","commonColumnLoading","getCommonColumns","handleCreateColumn","tableName","buildMode","Number","buttonTypeMap","get","submitAll","buttonTextMap","mhaMqDto","srcMha","String","openModal","openDetailModal","refInFor","mhaMessengerDto","dcName","mhaDbReplications","goToSwitchMessengers","mhaColumns"],"mappings":"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,CAAC,KAAO,WAAW,SAAW,CAACoC,QAAS,EAAEC,QAAS,IAAI,SAAW,IAAIhC,MAAM,CAACC,MAAOd,EAAIuD,UAAUC,MAAgB,WAAEzC,SAAS,SAAUC,GAAMhB,EAAIiB,KAAKjB,EAAIuD,UAAUC,MAAO,aAAcxC,IAAME,WAAW,iCAAiC,GAAGd,EAAG,WAAW,CAACI,MAAM,CAAC,MAAQ,eAAe,CAACJ,EAAG,QAAQ,CAACI,MAAM,CAAC,KAAO,WAAW,SAAW,CAACoC,QAAS,EAAEC,QAAS,IAAI,SAAW,IAAIhC,MAAM,CAACC,MAAOd,EAAIuD,UAAUC,MAAgB,WAAEzC,SAAS,SAAUC,GAAMhB,EAAIiB,KAAKjB,EAAIuD,UAAUC,MAAO,aAAcxC,IAAME,WAAW,iCAAiC,IAAI,IAAI,IAAI,IAAI,IAC7uQuC,EAAkB,G,oCCqJtB,G,wCAAA,CACA,mBACA,OACA,eACA,cACA,WAEA,gBACA,OACA,YACA,gBACA,UACA,WACA,SACA,OACA,OACA,SACA,cACA,gBAGA,KACA,eACA,aACA,qBACA,mBACA,iBACA,iBACA,eACA,cACA,kBACA,aACA,eAEA,kBACA,iBACA,qBACA,sBAIA,SACA,2CACA,sHACA,kBACA,oBACA,qBACA,4EAGA,0CACA,qHACA,kBACA,oBACA,oBACA,2EAGA,4KAMA,OALA,uBACA,6EACA,kBACA,oBACA,oCACA,SACA,mGACA,kBACA,kBACA,uBACA,kEACA,GACA,kCAIA,OACA,iGACA,kBACA,qCACA,0CArBA,IAuBA,iDACA,kEACA,QACA,yBACA,sCAEA,kBACA,kBACA,uCACA,wCAGA,gDACA,iEACA,QACA,uBACA,yBACA,qCAEA,kBACA,kBACA,sCACA,uCAGA,wCACA,iFACA,kBACA,uDACA,qBACA,qEACA,kCAEA,4CACA,QACA,yBACA,0BAGA,kBACA,kBACA,4CACA,uBACA,+BACA,kCAGA,yBACA,4DACA,mGAEA,6BACA,mBACA,qBACA,OACA,yBACA,2BAIA,wBACA,6BAEA,wCACA,GACA,yBACA,6CACA,4CAEA,eACA,sDACA,WACA,kBACA,kBACA,aAE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BACA,OACA,qBACA,kBACA,CACA,YACA,cAEA,CACA,YACA,iBACA,qBACA,YACA,WACA,WACA,gBACA,iBACA,UACA,MACA,CACA,cACA,kBAEA,mCAKA,CACA,aACA,iBACA,qBACA,YACA,WACA,WACA,gBACA,iBACA,UACA,MACA,CACA,cACA,kBAEA,oCAMA,gBACA,QACA,UACA,OACA,4BAEA,kBACA,eACA,CACA,WACA,SACA,eACA,aACA,qBACA,SACA,OACA,aAIA,CACA,WACA,aACA,cAEA,CACA,WACA,YACA,cAEA,CACA,WACA,eACA,qBACA,YACA,iCACA,QACA,gBACA,OACA,UAEA,MAIA,aACA,QACA,UACA,OACA,6BAGA,WACA,QACA,eACA,WACA,cAEA,uBACA,qBACA,mBACA,uBAEA,uBACA,qBACA,mBACA,qBAEA,eACA,iBACA,uBACA,4BACA,CACA,UACA,gBAEA,CACA,UACA,gBAEA,CACA,UACA,mBAKA,SACA,qBACA,SAeA,OAdA,8BACA,wBACA,+BACA,+BACA,oBAEA,wBACA,mCAGA,oBACA,oCAEA,8BACA,GAEA,yBACA,SAqBA,OApBA,qCACA,8CACA,uBACA,+BAEA,oBACA,mCACA,mCAEA,0DACA,YACA,oBACA,mBACA,qBACA,cACA,iCACA,wEACA,qDAEA,eACA,GAEA,sLAGA,OAFA,gBACA,wCACA,kCACA,oDACA,yBACA,kBACA,kBACA,oDAEA,iDACA,mDAEA,mBACA,oCACA,oBACA,4BACA,0CAjBA,IAmBA,+BACA,yDACA,iBAGA,6BAIA,gDAHA,iBAKA,0BACA,sBACA,qDAGA,mMACA,2DADA,IAGA,uBACA,SACA,eACA,wDAMA,cANA,CACA,4BACA,eACA,gBAMA,UAEA,uKACA,sCACA,cACA,wDACA,oDACA,mDACA,0CACA,2CACA,8DACA,mBACA,qBACA,sDACA,kDACA,2CAEA,iCACA,0CAhBA,IAkBA,uCACA,gDACA,kBACA,kBACA,+BAEA,iDAIA,iLASA,OARA,IACA,oBACA,2BACA,mBACA,oBAIA,0BACA,4DACA,kBACA,aACA,eACA,GACA,2BACA,mBACA,2BACA,yBACA,yBACA,sBAEA,uCACA,oBACA,yBACA,kCAGA,mBACA,gCAEA,oBACA,oBACA,0CAjCA,IAmCA,qCACA,OACA,OACA,yBACA,kBACA,cACA,WACA,WACA,mBACA,cAGA,wCACA,OACA,UACA,cAIA,UACA,6BACA,8BACA,yFACA,gCACA,qCAEA,+BACA,8KAEA,wBACA,kEAEA,+BACA,yGAEA,wBACA,+DAEA,+BACA,+JAEA,+BACA,+JAEA,6BACA,gLAEA,6BACA,2BAGA,mBACA,wBACA,iBC9dkX,I,YCO9W8C,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,QCgBf,GACA,gBACA,0BACA,OACA,sBACA,cACA,cACA,cACA,iBACA,iBACA,gBACA,qBAEA,kBACA,gBACA,OACA,eACA,YACA,wBACA,uBACA,qBACA,2BAEA,WACA,SAEA,kBACA,SACA,CACA,WACA,SACA,eACA,aACA,qBACA,SACA,OACA,aAIA,CACA,WACA,wBACA,qBACA,mBACA,SACA,OACA,gBAIA,CACA,WACA,YACA,qBACA,mBACA,SACA,OACA,mBAIA,CACA,WACA,YACA,UACA,qBACA,YACA,SACA,oBACA,gBACA,OACA,UAEA,KAGA,CACA,eACA,eACA,UACA,qBACA,YACA,wCACA,qBAGA,CACA,aACA,0BAEA,CACA,WACA,cACA,eACA,kBAKA,SACA,gLACA,mBACA,qCACA,oBACA,8DAJA,IAMA,mLACA,gBACA,mCACA,oBACA,8DAJA,IAMA,mLACA,gBACA,qCACA,8DAHA,IAKA,wBACA,sBACA,uBACA,wBAGA,UACA,uBACA,+DAGA,sBCnKgX,ICO5W,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,I,QClBX,EAAS,WAAa,IAAI1D,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACsE,MAAM,CAAEI,QAAS,UAAU4B,OAAQ,SAAU,CAACtG,EAAG,WAAW,CAACS,MAAM,CAACC,MAAOd,EAAS,MAAEe,SAAS,SAAUC,GAAMhB,EAAIc,MAAME,GAAKE,WAAW,UAAUlB,EAAIsB,GAAItB,EAAa,WAAE,SAASmJ,EAAS3D,GAAO,OAAOpF,EAAG,QAAQ,CAACe,IAAIgI,EAASC,OAAOnG,KAAM,QAAQzC,MAAM,CAAC,KAAO6I,OAAO7D,IAAQqB,YAAY7G,EAAI8G,GAAG,CAAC,CAAC3F,IAAI,UAAU4F,GAAG,WAAW,MAAO,CAAC3G,EAAG,SAAS,CAACG,YAAY,CAAC,gBAAgB,QAAQC,MAAM,CAAC,KAAO,oBAAoBmB,GAAG,CAAC,MAAQ,SAASa,GAAQ,OAAOxC,EAAIsJ,UAAU9D,MAAU,CAACxF,EAAIU,GAAG,WAAWN,EAAG,kBAAkB,CAACI,MAAM,CAAC,cAAc2I,KAAY/I,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAQ,SAAS,eAAc,GAAMK,MAAM,CAACC,MAAOd,EAAIuJ,gBAAgB/D,GAAQzE,SAAS,SAAUC,GAAMhB,EAAIiB,KAAKjB,EAAIuJ,gBAAiB/D,EAAOxE,IAAME,WAAW,2BAA2B,CAAElB,EAAIuJ,gBAAgB/D,GAAQpF,EAAG,gBAAgB,CAACE,IAAI,+BAA+BkJ,UAAS,EAAKhJ,MAAM,CAAC,UAAU2I,EAASM,gBAAgB7I,OAAO,WAAWuI,EAASC,OAAOnG,KAAK,GAAKkG,EAASC,OAAOM,UAAU1J,EAAIiC,MAAM,KAAK6F,OAAM,IAAO,MAAK,IAAO,CAAC9H,EAAIU,GAAG,IAAIV,EAAIW,GAAGwI,EAASC,OAAOnG,KAAO,WAAc,CAACkG,EAASQ,kBAAkBnF,QAAU,MAAO,UAAS,GAAGpE,EAAG,MAAMA,EAAG,SAAS,CAACI,MAAM,CAAC,KAAO,UAAU,KAAO,WAAWmB,GAAG,CAAC,MAAQ3B,EAAI4J,uBAAuB,CAAC5J,EAAIU,GAAG,uBAAuBN,EAAG,OAAO,IACt1C,EAAkB,GCDlB,G,oBAAS,WAAa,IAAIJ,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAAGJ,EAAIyG,UAAUgD,gBAAkHzJ,EAAIiC,KAArG7B,EAAG,QAAQ,CAACI,MAAM,CAAC,OAAS,GAAG,OAAS,GAAG,QAAUR,EAAI2G,QAAQ,KAAO3G,EAAI2J,qBAA+B3J,EAAIyG,UAAyB,gBAAErG,EAAG,QAAQ,CAACI,MAAM,CAAC,OAAS,GAAG,OAAS,GAAG,QAAUR,EAAI6J,WAAW,KAAO,CAAC7J,EAAIyG,cAAczG,EAAIiC,MAAM,KACzX,EAAkB,G,iCCatB,GACA,oBACA,OACA,cAEA,2BACA,OACA,mDACA,YACA,oBACA,SACA,CACA,WACA,SACA,qBACA,YACA,SACA,UACA,KACA,2BACA,cACA,MACA,SACA,MACA,aACA,MACA,YACA,MACA,QACA,MACA,KACA,MAEA,mBACA,OACA,OACA,aACA,YAEA,IACA,iBACA,kBAGA,KAGA,CACA,WACA,gBACA,UACA,eACA,2BACA,iBACA,eACA,2DACA,IACA,yKACA,oEACA,qDAFA,IAIA,OACA,2BACA,aACA,eACA,eACA,wBAKA,qBACA,IACA,IADA,QAkBA,OAhBA,gBACA,eACA,4BAEA,EADA,YACA,UAEA,YAGA,QACA,WAGA,QACA,aAEA,SACA,OACA,UAEA,KAGA,CACA,aACA,gBACA,qBACA,iCAGA,CACA,kBACA,gBACA,qBACA,+EAIA,YACA,CACA,WACA,gBACA,UACA,eACA,2BACA,iBACA,eACA,6CACA,IACA,yKACA,oEACA,qDAFA,IAIA,OACA,2BACA,aACA,eACA,eACA,wBAKA,qBACA,IACA,IADA,QAkBA,OAhBA,sBACA,eACA,4BAEA,EADA,YACA,UAEA,YAGA,QACA,WAGA,QACA,aAEA,SACA,OACA,UAEA,KAGA,CACA,WACA,UACA,OACA,qBACA,yBAGA,CACA,aACA,gBACA,qBACA,0FAGA,CACA,kBACA,OACA,qBACA,oDAGA,CACA,iBACA,OACA,qBACA,kDAMA,SACA,sBACA,iCAEA,oLACA,sBACA,4CACA,0CACA,+BACA,4EAEA,kBACA,wCACA,iCAEA,mBACA,kBAGA,oBACA,yBACA,0CAjBA,KAoBA,UACA,0BACA,8BACA,8CACA,gCACA,YAGA,mBACA,8BClPoX,ICOhX,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,I,oBCef,GACA,kBACA,+CACA,OACA,iBAEA,kBACA,gBACA,OACA,SACA,mBACA,iBAGA,SACA,sBACA,4BACA,sCAEA,2CACA,qBACA,oBACA,qBACA,WACA,gBACA,yBAIA,uCACA,yBACA,eACA,oBACA,6DACA,kBACA,aACA,eACA,EACA,2BAEA,0CAGA,mBACA,gCAEA,oBACA,kBACA,iBACA,uBAGA,2BACA,uCACA,OACA,yBACA,gCACA,6CACA,6BAMA,mBACA,wCACA,2DACA,4BACA,oBCrGkX,ICO9W,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,I,QCqDf,GACA,uDACA,gBACA,OACA,aACA,SAEA,oCACA,eACA,qBACA,yDACA,UACA,mBACA,oBAEA,aACA,MACA,gCACA,gCACA,8CACA,8CACA,8BACA,iBACA,aACA,kCAEA,gEAGA,SACA,qBACA,SAKA,OAJA,0BACA,wCACA,wCACA,0BACA,GAEA,sLACA,iFACA,WAGA,OADA,IACA,0BACA,iDACA,QACA,YAGA,kBACA,kBACA,EACA,mBAEA,gCAGA,mBACA,kCAEA,oBACA,oBACA,0CAxBA,IA0BA,wLACA,4DACA,2DAFA,IAIA,kLAIA,GAHA,sBACA,cACA,gBACA,eACA,yBACA,kEAGA,iEAGA,wCACA,oDACA,QACA,gBACA,gBACA,iCAGA,kBACA,kBACA,uBACA,GACA,8BACA,cACA,kCAEA,8CAGA,mBACA,gCAEA,oBACA,0BACA,2CApCA,IAsCA,2LACA,uEACA,uDACA,2DAHA,IAKA,wMAIA,OAHA,IACA,iBACA,wCACA,yBACA,iEACA,QACA,gBACA,mBAGA,kBACA,kBACA,uBACA,GACA,uCACA,+CACA,oFAGA,0BACA,0BACA,mCAGA,mBACA,oCAEA,oBACA,oBACA,0CA9BA,IAgCA,qLACA,gEADA,IAGA,qBACA,sBACA,OACA,wBACA,wBACA,sCACA,sCACA,yBAGA,uBAGA,uBACA,SACA,eACA,wDAMA,cANA,CACA,4BACA,eACA,gBAMA,WAGA,UACA,2BACA,yDAEA,OADA,wDACA,MACA,EAEA,IAGA,8BAEA,sFACA,oBAIA,gBACA,qCACA,kBALA,qCCnQmX,ICQ/W,G,UAAY,eACd,EACA,EACAwB,GACA,EACA,KACA,KACA,OAIa,e","file":"js/chunk-7b9171d6.5973d875.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqBuildV2.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Row',[_c('Form',{ref:\"drc1\",staticStyle:{\"float\":\"left\",\"margin-top\":\"50px\"},attrs:{\"model\":_vm.drc,\"label-width\":250}},[_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"消息类型\",\"prop\":\"mqType\"}},[_c('Tag',{attrs:{\"color\":\"blue\"}},[_vm._v(_vm._s(_vm.mqType)+\" \")])],1),_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"集群名\",\"prop\":\"mhaName\"}},[_c('Input',{attrs:{\"readonly\":\"\",\"placeholder\":\"请输入集群名\"},model:{value:(_vm.drc.mhaName),callback:function ($$v) {_vm.$set(_vm.drc, \"mhaName\", $$v)},expression:\"drc.mhaName\"}})],1),_c('FormItem',{attrs:{\"label\":\"选择Replicator\",\"prop\":\"replicator\"}},[_c('Select',{key:_vm.drc.currentInstances.replicator,staticStyle:{\"width\":\"300px\"},attrs:{\"multiple\":\"\",\"placeholder\":\"选择Replicator\"},model:{value:(_vm.drc.replicators),callback:function ($$v) {_vm.$set(_vm.drc, \"replicators\", $$v)},expression:\"drc.replicators\"}},_vm._l((_vm.drc.replicatorList),function(item){return _c('Option',{key:item.ip,attrs:{\"value\":item.ip}},[_vm._v(_vm._s(item.ip)+\" — \"+_vm._s(item.az)+\" \"+_vm._s(_vm.getRole(item.ip, _vm.drc.currentInstances.replicator))+\" \")])}),1),_vm._v(\"   \"),_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.autoConfigReplicator}},[_vm._v(\"自动录入\")])],1),(_vm.showMhaApplierConfig())?_c('FormItem',{attrs:{\"label\":\"选择Messenger\",\"prop\":\"messenger\"}},[_c('Select',{key:_vm.drc.currentInstances.messenger,staticStyle:{\"width\":\"300px\"},attrs:{\"multiple\":\"\",\"placeholder\":\"选择集群Messenger\"},model:{value:(_vm.drc.messengers),callback:function ($$v) {_vm.$set(_vm.drc, \"messengers\", $$v)},expression:\"drc.messengers\"}},_vm._l((_vm.drc.messengerList),function(item){return _c('Option',{key:item.ip,attrs:{\"value\":item.ip}},[_vm._v(_vm._s(item.ip)+\" [\"+_vm._s(item.type === 1 ? 'A' : (item.type === 7 ? 'M' : ''))+\"] — \"+_vm._s(item.az)+\" \"+_vm._s(_vm.getRole(item.ip, _vm.drc.currentInstances.messenger))+\" \")])}),1),_vm._v(\"   \"),_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.autoConfigMessenger}},[_vm._v(\"自动录入\")])],1):_vm._e(),_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"初始拉取位点R\"}},[_c('Input',{attrs:{\"placeholder\":\"变更replicator机器时，请输入binlog拉取位点\"},model:{value:(_vm.drc.rGtidExecuted),callback:function ($$v) {_vm.$set(_vm.drc, \"rGtidExecuted\", $$v)},expression:\"drc.rGtidExecuted\"}}),_c('Row',[_c('Col',{attrs:{\"span\":\"12\"}},[_c('Button',{on:{\"click\":_vm.queryMhaMachineGtid}},[_vm._v(\"查询mha位点\")]),(_vm.hasTest1)?_c('span',[_c('Icon',{attrs:{\"type\":_vm.testSuccess1 ? 'ios-checkmark-circle' : 'ios-close-circle',\"color\":_vm.testSuccess1 ? 'green' : 'red'}}),_vm._v(\" \"+_vm._s(_vm.testSuccess1 ? '查询实时位点成功' : '连接查询失败')+\" \")],1):_vm._e()],1),_c('Col',{attrs:{\"span\":\"12\"}},[_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.queryMhaGtidCheckRes}},[_vm._v(\"位点校验\")])],1)],1)],1),_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"mq配置\"}},[_c('Button',{attrs:{\"type\":\"primary\",\"ghost\":\"\"},on:{\"click\":_vm.goToMqConfigs}},[_vm._v(\"mq配置\")])],1),(_vm.showDbMhaApplierConfig())?_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"DB Applier 配置\"}},[_c('Button',{attrs:{\"type\":\"primary\",\"ghost\":\"\"},on:{\"click\":_vm.getMhaDbMessenger}},[_vm._v(\"Db Applier 管理\")])],1):_vm._e(),(_vm.showMhaApplierConfig())?_c('FormItem',{staticStyle:{\"width\":\"600px\"},attrs:{\"label\":\"初始同步位点A\"}},[_c('Input',{attrs:{\"placeholder\":\"请输入DRC同步起始位点\"},model:{value:(_vm.drc.aGtidExecuted),callback:function ($$v) {_vm.$set(_vm.drc, \"aGtidExecuted\", $$v)},expression:\"drc.aGtidExecuted\"}})],1):_vm._e()],1)],1),_c('Form',{staticStyle:{\"margin-top\":\"50px\"},attrs:{\"label-width\":250}},[_c('FormItem',[_c('Row',[_c('Col',{attrs:{\"span\":\"6\"}},[_c('Button',{on:{\"click\":function($event){return _vm.handleReset('drc1')}}},[_vm._v(\"重置\")])],1),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.preCheckConfigure ()}}},[_vm._v(\"提交\")])],1)],1)],1),_c('Modal',{attrs:{\"title\":\"确认配置信息\",\"width\":\"900px\"},on:{\"on-ok\":_vm.submitConfig},model:{value:(_vm.drc.reviewModal),callback:function ($$v) {_vm.$set(_vm.drc, \"reviewModal\", $$v)},expression:\"drc.reviewModal\"}},[_c('Form',{staticStyle:{\"width\":\"80%\"}},[_c('FormItem',{attrs:{\"label\":\"集群名\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.mhaName),callback:function ($$v) {_vm.$set(_vm.drc, \"mhaName\", $$v)},expression:\"drc.mhaName\"}})],1),_c('FormItem',{attrs:{\"label\":\"集群Replicator\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.replicators),callback:function ($$v) {_vm.$set(_vm.drc, \"replicators\", $$v)},expression:\"drc.replicators\"}})],1),_c('FormItem',{attrs:{\"label\":\"集群Messenger\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.messengers),callback:function ($$v) {_vm.$set(_vm.drc, \"messengers\", $$v)},expression:\"drc.messengers\"}})],1),_c('FormItem',{attrs:{\"label\":\"新增Replicator的新增binlog拉取位点\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.rGtidExecuted),callback:function ($$v) {_vm.$set(_vm.drc, \"rGtidExecuted\", $$v)},expression:\"drc.rGtidExecuted\"}})],1),_c('FormItem',{attrs:{\"label\":\"Messenger集群的起始位点\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.drc.aGtidExecuted),callback:function ($$v) {_vm.$set(_vm.drc, \"aGtidExecuted\", $$v)},expression:\"drc.aGtidExecuted\"}})],1)],1)],1),_c('Modal',{attrs:{\"title\":\"配置结果\",\"width\":\"1200px\"},model:{value:(_vm.drc.resultModal),callback:function ($$v) {_vm.$set(_vm.drc, \"resultModal\", $$v)},expression:\"drc.resultModal\"}},[_c('Form',{staticStyle:{\"width\":\"100%\"}},[_c('FormItem',{attrs:{\"label\":\"集群配置\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.result),callback:function ($$v) {_vm.result=$$v},expression:\"result\"}})],1)],1)],1),_c('Modal',{attrs:{\"title\":\"存在一对多共用运行配置请确认\",\"width\":\"900px\"},on:{\"on-ok\":_vm.reviewConfigure},model:{value:(_vm.drc.warnModal),callback:function ($$v) {_vm.$set(_vm.drc, \"warnModal\", $$v)},expression:\"drc.warnModal\"}},[_c('label',{staticStyle:{\"color\":\"black\"}},[_vm._v(\"共用replicator配置的集群: \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.drc.conflictMha),expression:\"drc.conflictMha\"}],domProps:{\"value\":(_vm.drc.conflictMha)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.drc, \"conflictMha\", $event.target.value)}}}),_c('Divider'),_c('div',[_c('p',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"线上一对多replicator配置\")]),_c('ul',_vm._l((_vm.drc.replicators.share),function(item){return _c('ol',{key:item},[_vm._v(_vm._s(item))])}),0)]),_c('Divider'),_c('div',[_c('p',{staticStyle:{\"color\":\"black\"}},[_vm._v(\"修改后replicator配置\")]),_c('ul',_vm._l((_vm.drc.replicators.conflictCurrent),function(item){return _c('ol',{key:item},[_vm._v(_vm._s(item))])}),0)])],1),_c('Modal',{attrs:{\"title\":\"gitd位点校验结果\",\"width\":\"900px\"},model:{value:(_vm.gtidCheck.modal),callback:function ($$v) {_vm.$set(_vm.gtidCheck, \"modal\", $$v)},expression:\"gtidCheck.modal\"}},[_c('Form',{staticStyle:{\"width\":\"80%\"}},[_c('FormItem',{attrs:{\"label\":\"校验结果\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.gtidCheck.resVo.legal),callback:function ($$v) {_vm.$set(_vm.gtidCheck.resVo, \"legal\", $$v)},expression:\"gtidCheck.resVo.legal\"}})],1),_c('FormItem',{attrs:{\"label\":\"当前Mha\"}},[_c('Input',{attrs:{\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.gtidCheck.resVo.mha),callback:function ($$v) {_vm.$set(_vm.gtidCheck.resVo, \"mha\", $$v)},expression:\"gtidCheck.resVo.mha\"}})],1),_c('FormItem',{attrs:{\"label\":\"配置位点\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.gtidCheck.resVo.configGtid),callback:function ($$v) {_vm.$set(_vm.gtidCheck.resVo, \"configGtid\", $$v)},expression:\"gtidCheck.resVo.configGtid\"}})],1),_c('FormItem',{attrs:{\"label\":\"purgedGtid\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":{minRows: 1,maxRows: 30},\"readonly\":\"\"},model:{value:(_vm.gtidCheck.resVo.purgedGtid),callback:function ($$v) {_vm.$set(_vm.gtidCheck.resVo, \"purgedGtid\", $$v)},expression:\"gtidCheck.resVo.purgedGtid\"}})],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template v-if=\"current === 0\" :key=\"0\">\n  <div>\n    <Row>\n      <Form ref=\"drc1\" :model=\"drc\" :label-width=\"250\" style=\"float: left; margin-top: 50px\">\n        <FormItem label=\"消息类型\" prop=\"mqType\" style=\"width: 600px\">\n          <Tag  color=\"blue\">{{mqType}}\n          </Tag>\n        </FormItem>\n        <FormItem label=\"集群名\" prop=\"mhaName\" style=\"width: 600px\">\n          <Input v-model=\"drc.mhaName\" readonly placeholder=\"请输入集群名\"/>\n        </FormItem>\n        <FormItem label=\"选择Replicator\" prop=\"replicator\">\n          <Select v-model=\"drc.replicators\" multiple style=\"width: 300px\" :key=\"drc.currentInstances.replicator\"  placeholder=\"选择Replicator\">\n            <Option v-for=\"item in drc.replicatorList\" :value=\"item.ip\" :key=\"item.ip\">{{ item.ip }} — {{ item.az}}\n              {{getRole(item.ip, drc.currentInstances.replicator)}}\n            </Option>\n          </Select>\n          &nbsp;\n          <Button type=\"success\" @click=\"autoConfigReplicator\">自动录入</Button>\n        </FormItem>\n        <FormItem  v-if=\"showMhaApplierConfig()\" label=\"选择Messenger\" prop=\"messenger\">\n          <Select v-model=\"drc.messengers\" multiple style=\"width: 300px\" :key=\"drc.currentInstances.messenger\" placeholder=\"选择集群Messenger\">\n            <Option v-for=\"item in drc.messengerList\" :value=\"item.ip\" :key=\"item.ip\">{{ item.ip }}  [{{ item.type === 1 ? 'A' : (item.type === 7 ? 'M' : '') }}] — {{ item.az }}\n              {{getRole(item.ip, drc.currentInstances.messenger)}}\n            </Option>\n          </Select>\n          &nbsp;\n          <Button type=\"success\" @click=\"autoConfigMessenger\">自动录入</Button>\n        </FormItem>\n        <FormItem label=\"初始拉取位点R\" style=\"width: 600px\">\n          <Input v-model=\"drc.rGtidExecuted\" placeholder=\"变更replicator机器时，请输入binlog拉取位点\"/>\n          <Row>\n            <Col span=\"12\">\n              <Button @click=\"queryMhaMachineGtid\">查询mha位点</Button>\n              <span v-if=\"hasTest1\">\n                  <Icon :type=\"testSuccess1 ? 'ios-checkmark-circle' : 'ios-close-circle'\"\n                        :color=\"testSuccess1 ? 'green' : 'red'\"/>\n                    {{ testSuccess1 ? '查询实时位点成功' : '连接查询失败' }}\n                </span>\n            </Col>\n            <Col span=\"12\">\n              <Button type=\"success\" @click=\"queryMhaGtidCheckRes\">位点校验</Button>\n            </Col>\n          </Row>\n        </FormItem>\n        <FormItem label=\"mq配置\" style=\"width: 600px\">\n          <Button type=\"primary\" ghost @click=\"goToMqConfigs\">mq配置</Button>\n        </FormItem>\n        <FormItem v-if=\"showDbMhaApplierConfig()\" label=\"DB Applier 配置\"  style=\"width: 600px\">\n          <Button type=\"primary\" ghost @click=\"getMhaDbMessenger\">Db Applier 管理</Button>\n        </FormItem>\n        <FormItem v-if=\"showMhaApplierConfig()\"  label=\"初始同步位点A\" style=\"width: 600px\">\n          <Input v-model=\"drc.aGtidExecuted\" placeholder=\"请输入DRC同步起始位点\"/>\n        </FormItem>\n        <!--      <FormItem label=\"行过滤\" style=\"width: 600px\">-->\n        <!--        <Button type=\"primary\" ghost @click=\"goToConfigRowsFiltersInSrcApplier\">配置行过滤</Button>-->\n        <!--      </FormItem>-->\n      </Form>\n    </Row>\n    <Form :label-width=\"250\" style=\"margin-top: 50px\">\n      <FormItem>\n        <Row>\n          <Col span=\"6\">\n            <Button @click=\"handleReset('drc1')\">重置</Button>\n          </Col>\n          <Col span=\"6\">\n            <Button type=\"primary\" @click=\"preCheckConfigure ()\">提交</Button>\n          </Col>\n        </Row>\n      </FormItem>\n      <Modal\n        v-model=\"drc.reviewModal\"\n        title=\"确认配置信息\"\n        width=\"900px\"\n        @on-ok=\"submitConfig\">\n        <Form style=\"width: 80%\">\n          <FormItem label=\"集群名\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.mhaName\" readonly/>\n          </FormItem>\n          <FormItem label=\"集群Replicator\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.replicators\" readonly/>\n          </FormItem>\n          <FormItem label=\"集群Messenger\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.messengers\" readonly/>\n          </FormItem>\n          <FormItem label=\"新增Replicator的新增binlog拉取位点\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.rGtidExecuted\" readonly/>\n          </FormItem>\n          <FormItem label=\"Messenger集群的起始位点\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"drc.aGtidExecuted\" readonly/>\n          </FormItem>\n        </Form>\n      </Modal>\n      <Modal\n        v-model=\"drc.resultModal\"\n        title=\"配置结果\"\n        width=\"1200px\">\n        <Form style=\"width: 100%\">\n          <FormItem label=\"集群配置\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"result\" readonly/>\n          </FormItem>\n        </Form>\n      </Modal>\n      <!--             v-model=\"drc.warnModal\"-->\n      <Modal\n        v-model=\"drc.warnModal\"\n        title=\"存在一对多共用运行配置请确认\"\n        width=\"900px\"\n        @on-ok=\"reviewConfigure\">\n        <label style=\"color: black\">共用replicator配置的集群: </label>\n        <input v-model=\"drc.conflictMha\"></input>\n        <Divider/>\n        <div>\n          <p style=\"color: red\">线上一对多replicator配置</p>\n          <ul>\n            <ol v-for=\"item in drc.replicators.share\" :key=\"item\">{{ item }}</ol>\n          </ul>\n        </div>\n        <Divider/>\n        <div>\n          <p style=\"color: black\">修改后replicator配置</p>\n          <ul>\n            <ol v-for=\"item in drc.replicators.conflictCurrent\" :key=\"item\">{{ item }}</ol>\n          </ul>\n        </div>\n      </Modal>\n      <Modal\n        v-model=\"gtidCheck.modal\"\n        title=\"gitd位点校验结果\"\n        width=\"900px\">\n        <Form style=\"width: 80%\">\n          <FormItem label=\"校验结果\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"gtidCheck.resVo.legal\" readonly/>\n          </FormItem>\n          <FormItem label=\"当前Mha\">\n            <Input :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"gtidCheck.resVo.mha\" readonly/>\n          </FormItem>\n          <FormItem label=\"配置位点\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"gtidCheck.resVo.configGtid\" readonly/>\n          </FormItem>\n          <FormItem label=\"purgedGtid\">\n            <Input type=\"textarea\" :autosize=\"{minRows: 1,maxRows: 30}\" v-model=\"gtidCheck.resVo.purgedGtid\" readonly/>\n          </FormItem>\n        </Form>\n      </Modal>\n    </Form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'drcMqConfig',\n  props: {\n    mhaName: String,\n    mqType: String,\n    dc: String\n  },\n  data () {\n    return {\n      hasTest1: false,\n      testSuccess1: false,\n      result: false,\n      gtidCheck: {\n        modal: false,\n        resVo: {\n          mha: '',\n          legal: '',\n          configGtid: '',\n          purgedGtid: ''\n        }\n      },\n      drc: {\n        reviewModal: false,\n        warnModal: false,\n        mhaName: this.mhaName,\n        mqType: this.mqType,\n        rGtidExecuted: '',\n        aGtidExecuted: '',\n        replicators: {},\n        messengers: [],\n        currentInstances: {\n          messenger: [],\n          replicator: []\n        },\n        replicatorList: {},\n        messengerList: [],\n        dbMessengerSwitch: false,\n        dbMessengerList: []\n      }\n    }\n  },\n  methods: {\n    autoConfigReplicator () {\n      this.axios.get('/api/drc/v2/resource/mha/auto?mhaName=' + this.drc.mhaName + '&type=0' + '&selectedIps=' + this.drc.replicators)\n        .then(response => {\n          console.log(response.data)\n          this.drc.replicators = []\n          response.data.data.forEach(ip => this.drc.replicators.push(ip.ip))\n        })\n    },\n    autoConfigMessenger () {\n      this.axios.get('/api/drc/v2/resource/mha/auto?mhaName=' + this.drc.mhaName + '&type=7' + '&selectedIps=' + this.drc.messengers)\n        .then(response => {\n          console.log(response.data)\n          this.drc.messengers = []\n          response.data.data.forEach(ip => this.drc.messengers.push(ip.ip))\n        })\n    },\n    async getResources () {\n      this.drc.messengerList = []\n      this.axios.get('/api/drc/v2/resource/mha/all?mhaName=' + this.drc.mhaName + '&type=0')\n        .then(response => {\n          console.log(response.data)\n          this.drc.replicatorList = response.data.data\n        })\n      await this.axios.get('/api/drc/v2/resource/mha/all?mhaName=' + this.drc.mhaName + '&type=7&subType=' + this.drc.mqType)\n        .then(response => {\n          const applierData = response.data.data\n          applierData.forEach(a => {\n            const existItem = this.drc.messengerList.find(existing => existing.ip === a.ip)\n            if (!existItem) {\n              this.drc.messengerList.push(a)\n            }\n          })\n          // this.drc.messengerList = { ...this.drc.messengerList, ...response.data.data }\n        })\n      this.axios.get('/api/drc/v2/config/mha/dbMessenger?mhaName=' + this.drc.mhaName + '&mqType=' + this.drc.mqType)\n        .then(response => {\n          this.drc.dbMessengerList = response.data.data\n        })\n    },\n    refreshReplicatorInstances () {\n      this.axios.get('/api/drc/v2/remote/resource/replicatorInstances', {\n        params: {\n          mhaName: this.drc.mhaName,\n          ips: this.drc.replicators.join(',')\n        }\n      }).then(response => {\n        const instances = response.data.data\n        console.log('replicator instance: ', instances)\n        this.drc.currentInstances.replicator = instances\n      })\n    },\n    refreshMessengerInstances () {\n      this.axios.get('/api/drc/v2/remote/resource/messengerInstances', {\n        params: {\n          mqType: this.drc.mqType,\n          mhaName: this.drc.mhaName,\n          ips: this.drc.messengers.join(',')\n        }\n      }).then(response => {\n        const instances = response.data.data\n        console.log('messenger instance: ', instances)\n        this.drc.currentInstances.messenger = instances\n      })\n    },\n    getResourcesInUse () {\n      this.axios.get('/api/drc/v2/mha/replicator', { params: { mhaName: this.drc.mhaName } })\n        .then(response => {\n          console.log(this.drc.mhaName + ' replicators ' + response.data.data)\n          this.drc.replicators = []\n          response.data.data.forEach(ip => this.drc.replicators.push(ip))\n          this.refreshReplicatorInstances()\n        })\n      this.axios.get('/api/drc/v2/mha/messenger', {\n        params: {\n          mhaName: this.drc.mhaName,\n          mqType: this.drc.mqType\n        }\n      })\n        .then(response => {\n          const messengerDto = response.data.data\n          console.log(this.drc.mhaName + ' messengers ' + messengerDto)\n          this.drc.messengers = messengerDto.ips\n          this.drc.aGtidExecuted = messengerDto.gtidInit\n          this.refreshMessengerInstances()\n        })\n    },\n    goToMqConfigs () {\n      console.log('go to change mq config for ' + this.drc.mhaName)\n      this.$router.push({ path: '/v2/mqConfigs', query: { mhaName: this.drc.mhaName, mqType: this.drc.mqType } })\n    },\n    getMhaDbMessenger () {\n      this.$router.push({\n        path: '/dbMessengers',\n        query: {\n          mhaName: this.drc.mhaName,\n          mqType: this.drc.mqType\n        }\n      })\n    },\n    handleReset (name) {\n      this.$refs[name].resetFields()\n    },\n    preCheckConfigure () {\n      const params = {\n        mhaName: this.drc.mhaName,\n        replicatorIps: this.drc.replicators.join(','),\n        messengerIps: this.drc.messengers.join(',')\n      }\n      console.log(params)\n      this.axios.get('/api/drc/v2/mha/replicatorIps/check', {\n        params: params\n      }).then(response => {\n        const preCheckRes = response.data.data\n        if (preCheckRes.status === 0) {\n          // 无风险继续\n          this.drc.reviewModal = true\n        } else if (preCheckRes.status === 1) {\n          // 有风险，进入确认页面\n          this.drc.replicators.share = preCheckRes.workingReplicatorIps\n          this.drc.replicators.conflictCurrent = this.drc.replicators\n          this.drc.conflictMha = preCheckRes.conflictMha\n          this.drc.warnModal = true\n        } else {\n          // 响应失败\n          window.alert('config preCheck fail')\n        }\n      })\n    },\n    queryMhaMachineGtid () {\n      this.hasTest1 = false\n      this.drc.rGtidExecuted = ''\n      const that = this\n      console.log('/api/drc/v2/mha/gtid/executed?mha=' + this.drc.mhaName)\n      that.axios.get('/api/drc/v2/mha/gtid/executed?mha=' + this.drc.mhaName)\n        .then(response => {\n          this.hasTest1 = true\n          if (response.data.status === 0) {\n            this.drc.rGtidExecuted = response.data.data\n            this.testSuccess1 = true\n          } else {\n            this.testSuccess1 = false\n            this.$Message.warning('查询位点失败: ' + response.data.message)\n          }\n        })\n        .catch(message => {\n          this.$Message.error('查询位点异常: ' + message)\n        })\n    },\n    queryMhaGtidCheckRes () {\n      if (this.drc.rGtidExecuted == null || this.drc.rGtidExecuted === '') {\n        this.$Message.warning('位点为空！')\n        return\n      }\n      const that = this\n      console.log('/api/drc/v2/mha/gtid/checkResult?mha=' + this.drc.mhaName +\n        '&configGtid=' + this.drc.rGtidExecuted)\n      that.axios.get('/api/drc/v2/mha/gtid/checkResult?mha=' + this.drc.mhaName +\n        '&configGtid=' + this.drc.rGtidExecuted)\n        .then(response => {\n          if (response.data.status === 0) {\n            this.gtidCheck.resVo = {\n              mha: this.drc.mhaName,\n              legal: response.data.data.legal === true ? '合理位点' : 'binlog已经被purge',\n              configGtid: this.drc.rGtidExecuted,\n              purgedGtid: response.data.data.purgedGtid\n            }\n            this.gtidCheck.modal = true\n          } else {\n            console.log('api fail:' + '/api/drc/v2/mha/gtid/checkResult?mha=' + this.drc.mhaName +\n              '&configGtid=' + this.drc.rGtidExecuted)\n          }\n        })\n        .catch(message => {\n          this.$Message.error('校验位点异常: ' + message)\n        })\n    },\n    showDbMhaApplierConfig () {\n      return this.drc.dbMessengerSwitch || this.hasAppliers(this.drc.dbMessengerList)\n    },\n    showMhaApplierConfig () {\n      return true\n      // return !this.hasAppliers(this.drc.dbMessengerList)\n    },\n    getRole (ip, currentInstances) {\n      if (!currentInstances || currentInstances.length === 0) {\n        return ''\n      }\n      for (const instance of currentInstances) {\n        if (instance.ip === ip) {\n          return ' — ' + (instance.master ? 'Master' : 'Slave')\n        }\n      }\n      return ''\n    },\n    hasAppliers (dbApplierDtos) {\n      for (const x of dbApplierDtos) {\n        if (x.ips && x.ips.length > 0) {\n          return true\n        }\n      }\n      return false\n    },\n    submitConfig () {\n      const that = this\n      this.axios.post('/api/drc/v2/config/messenger/submitConfig', {\n        mhaName: this.drc.mhaName,\n        mqType: this.drc.mqType,\n        replicatorIps: this.drc.replicators,\n        messengerIps: this.drc.messengers,\n        aGtidExecuted: this.drc.aGtidExecuted,\n        rGtidExecuted: this.drc.rGtidExecuted\n      }).then(response => {\n        console.log(response.data)\n        if (response.data.status === 1) {\n          this.$Message.warning({\n            content: '提交失败：' + response.data.message,\n            duration: 10\n          })\n          return\n        }\n        that.result = response.data.data\n        that.drc.reviewModal = false\n        that.drc.resultModal = true\n      }).catch(message => {\n        this.$Message.error({\n          content: '提交异常: ' + message,\n          duration: 10\n        })\n      })\n    },\n    reviewConfigure () {\n      this.drc.reviewModal = true\n    }\n  },\n  created () {\n    this.getResources()\n    this.getResourcesInUse()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./drcMqConfig.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./drcMqConfig.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./drcMqConfig.vue?vue&type=template&id=295173ba&scoped=true&v-if=current%20%3D%3D%3D%200&%3Akey=0&\"\nimport script from \"./drcMqConfig.vue?vue&type=script&lang=js&\"\nexport * from \"./drcMqConfig.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"295173ba\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('base-component',[_c('Breadcrumb',{style:({margin: '15px 0 15px 185px', position: 'fixed'})},[_c('BreadcrumbItem',{attrs:{\"to\":\"/home\"}},[_vm._v(\"首页\")]),_c('BreadcrumbItem',{attrs:{\"to\":\"/v2/dbMqBuildV2\"}},[_vm._v(\"DB粒度 Mq\")])],1),_c('Content',{staticClass:\"content\",style:({padding: '10px', background: '#ffffff', margin: '50px 0 111px 185px', zIndex: '1'})},[_c('Row',{attrs:{\"gutter\":10,\"align\":\"middle\"}},[_c('Col',{attrs:{\"span\":\"18\"}},[_c('Form',{staticStyle:{\"margin-right\":\"20px\",\"margin-top\":\"10px\"},attrs:{\"model\":_vm.formItem,\"label-width\":100}},[_c('FormItem',{attrs:{\"label\":\"消息类型\",\"required\":true}},[_c('Select',{attrs:{\"placeholder\":\"mqType\"},on:{\"on-change\":_vm.selectDb},model:{value:(_vm.meta.mqType),callback:function ($$v) {_vm.$set(_vm.meta, \"mqType\", $$v)},expression:\"meta.mqType\"}},_vm._l((_vm.mqTypeList),function(item){return _c('Option',{key:item,attrs:{\"value\":item}},[_vm._v(_vm._s(item)+\" \")])}),1)],1),_c('FormItem',{attrs:{\"label\":\"数据库\",\"required\":true}},[_c('Select',{attrs:{\"filterable\":\"\",\"disabled\":!!_vm.meta.fixDb,\"placeholder\":\"请搜索数据库信息\",\"remote-method\":_vm.getExistDb,\"loading\":_vm.dataLoading},on:{\"on-change\":_vm.selectDb},model:{value:(_vm.meta.dbName),callback:function ($$v) {_vm.$set(_vm.meta, \"dbName\", $$v)},expression:\"meta.dbName\"}},_vm._l((_vm.meta.dbOptions),function(option,index){return _c('Option',{key:index,attrs:{\"value\":option.dbName}},[_vm._v(_vm._s(option.dbName))])}),1)],1),_c('FormItem',{attrs:{\"label\":\"同步方向\",\"required\":true}},[_c('RadioGroup',{attrs:{\"button-style\":\"solid\"},on:{\"on-change\":_vm.afterSelectExistReplication},model:{value:(_vm.selectedExistReplication),callback:function ($$v) {_vm.selectedExistReplication=$$v},expression:\"selectedExistReplication\"}},_vm._l((_vm.meta.existReplicationRegionOptions),function(items){return _c('Radio',{key:items.srcRegionName,attrs:{\"label\":items.srcRegionName,\"border\":\"\"}},[_vm._v(\" \"+_vm._s(items.srcRegionName)+\" \")])}),1),_c('Button',{attrs:{\"type\":\"primary\",\"icon\":\"md-add\",\"ghost\":\"\"},on:{\"click\":_vm.goToCreateReplication}},[_vm._v(\"新增\")]),_c('Modal',{attrs:{\"width\":\"1200px\",\"footer-hide\":true,\"title\":\"创建同步\"},model:{value:(_vm.createModal.open),callback:function ($$v) {_vm.$set(_vm.createModal, \"open\", $$v)},expression:\"createModal.open\"}},[(_vm.createModal.open)?_c('mha-preview',{attrs:{\"db-name\":_vm.meta.dbName,\"replication-type\":_vm.replicationType,\"exist-replication-region-options\":_vm.meta.existReplicationRegionOptions},on:{\"updated\":_vm.selectDb}}):_vm._e()],1)],1),_c('Divider',{attrs:{\"orientation\":\"left\"}},[_vm._v(\"消息投递配置\")]),_c('Card',{staticStyle:{\"width\":\"100%\"}},[_c('mq-tables',{attrs:{\"dalcluster-name\":_vm.drcConfig.dalclusterName,\"table-data\":_vm.drcConfig.logicTableSummaryDtos,\"data-loading\":_vm.configDataLoading,\"src-region\":_vm.meta.srcRegionName,\"dst-region\":_vm.meta.dstRegionName,\"db-name\":_vm.meta.dbName,\"db-names\":_vm.drcConfig.dbNames,\"mq-type\":_vm.meta.mqType},on:{\"updated\":_vm.getDrcConfig}})],1),_c('Divider',{attrs:{\"orientation\":\"left\"}},[_vm._v(\"DB\")]),_c('Card',{staticStyle:{\"width\":\"100%\"}},[(_vm.drcConfig.mhaMqDtos)?_c('mha-mq-panel',{attrs:{\"mha-mq-dtos\":_vm.drcConfig.mhaMqDtos},on:{\"updated\":_vm.getDrcConfig}}):_vm._e()],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({padding: '1px 1px',height: '100%'})},[_c('Table',{ref:\"multipleTable\",staticStyle:{\"margin-top\":\"20px\"},attrs:{\"stripe\":\"\",\"columns\":_vm.columns,\"data\":_vm.tableData,\"loading\":_vm.dataLoading,\"border\":\"\"},scopedSlots:_vm._u([{key:\"action\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('Button',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.goToUpdateConfig(row, index)}}},[_vm._v(\"修改 \")]),_c('Button',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"type\":\"error\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.goToDeleteConfig(row, index)}}},[_vm._v(\"删除 \")])]}}])}),_c('br'),_c('Button',{attrs:{\"type\":\"success\",\"icon\":\"md-add\"},on:{\"click\":_vm.goToInsertConfig}},[_vm._v(\" 新增 \")]),_c('Modal',{attrs:{\"width\":\"1200px\",\"footer-hide\":true,\"title\":_vm.actionTitle},model:{value:(_vm.editModal.open),callback:function ($$v) {_vm.$set(_vm.editModal, \"open\", $$v)},expression:\"editModal.open\"}},[(_vm.editModal.open)?_c('db-mq-config',{ref:\"dbReplicationConfigComponent\",attrs:{\"dalcluster-name\":_vm.dalclusterName,\"mq-type\":_vm.mqType,\"config-data\":_vm.selectedRow,\"src-region\":_vm.srcRegion,\"dst-region\":_vm.srcRegion,\"db-names\":_vm.dbNames,\"form-action\":_vm.action,\"filter-read-only\":_vm.filterReadOnly},on:{\"finished\":_vm.finishConfig}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({padding: '1px 1px',height: '100%'})},[_c('Row',{attrs:{\"gutter\":10,\"align\":\"middle\"}},[_c('Col',{attrs:{\"span\":\"13\"}},[_c('Form',{staticStyle:{\"margin-right\":\"20px\",\"margin-top\":\"10px\"},attrs:{\"model\":_vm.formItem,\"disabled\":_vm.formAction === 'delete',\"label-width\":100}},[(_vm.alertInfo.show)?_c('Alert',{attrs:{\"type\":\"warning\",\"show-icon\":\"\",\"closable\":\"\"},scopedSlots:_vm._u([{key:\"desc\",fn:function(){return [_vm._v(_vm._s(_vm.alertInfo.message))]},proxy:true}],null,false,3041357252)},[_vm._v(\" \"+_vm._s(_vm.alertInfo.title)+\" \")]):_vm._e(),(_vm.alertInfo.successShow)?_c('Alert',{attrs:{\"type\":\"success\",\"show-icon\":\"\",\"closable\":\"\"},scopedSlots:_vm._u([{key:\"desc\",fn:function(){return [_vm._v(_vm._s(_vm.alertInfo.message))]},proxy:true}],null,false,3041357252)},[_vm._v(\" \"+_vm._s(_vm.alertInfo.title)+\" \")]):_vm._e(),_c('FormItem',{attrs:{\"label\":\"部门\"}},[_c('Select',{attrs:{\"filterable\":\"\",\"placeholder\":\"选择部门\"},model:{value:(_vm.formItem.bu),callback:function ($$v) {_vm.$set(_vm.formItem, \"bu\", $$v)},expression:\"formItem.bu\"}},_vm._l((_vm.formItem.constants.buForChosen),function(item){return _c('Option',{key:item,attrs:{\"value\":item}},[_vm._v(_vm._s(item))])}),1)],1),_c('FormItem',{attrs:{\"prop\":\"dbName\",\"label\":\"库名\",\"required\":true}},[_c('Input',{attrs:{\"type\":\"textarea\",\"autosize\":true,\"readonly\":true,\"border\":false,\"placeholder\":\"请输入库名（支持正则）\"},model:{value:(_vm.formItem.dbName),callback:function ($$v) {_vm.$set(_vm.formItem, \"dbName\", $$v)},expression:\"formItem.dbName\"}})],1),_c('FormItem',{attrs:{\"label\":\"同步表\",\"required\":true}},[_c('Input',{attrs:{\"placeholder\":\"请输入正则表达式\"},on:{\"on-keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"space\",32,$event.key,[\" \",\"Spacebar\"])){ return null; }$event.preventDefault();},\"on-blur\":_vm.afterEnterTableName},model:{value:(_vm.formItem.tableName),callback:function ($$v) {_vm.$set(_vm.formItem, \"tableName\", $$v)},expression:\"formItem.tableName\"}})],1),_c('FormItem',{attrs:{\"label\":\"MQ主题\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"placeholder\":\"请输入自定义Topic\"},on:{\"on-blur\":_vm.refreshTopicBu},model:{value:(_vm.formItem.topic),callback:function ($$v) {_vm.$set(_vm.formItem, \"topic\", $$v)},expression:\"formItem.topic\"}})],1),_c('FormItem',{attrs:{\"label\":\"exclude类型\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"filterable\":\"\",\"multiple\":\"\",\"placeholder\":\"选择过滤类型\",\"disabled\":_vm.filterReadOnly},model:{value:(_vm.formItem.excludeFilterTypes),callback:function ($$v) {_vm.$set(_vm.formItem, \"excludeFilterTypes\", $$v)},expression:\"formItem.excludeFilterTypes\"}},_vm._l((_vm.excludeFilterTypesForChose),function(item){return _c('Option',{key:item.value,attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.label))])}),1)],1),_c('FormItem',{attrs:{\"label\":\"有序消息\"}},[_c('i-switch',{attrs:{\"size\":\"large\"},scopedSlots:_vm._u([{key:\"open\",fn:function(){return [_c('span',[_vm._v(\"On\")])]},proxy:true},{key:\"close\",fn:function(){return [_c('span',[_vm._v(\"Off\")])]},proxy:true}]),model:{value:(_vm.formItem.switch.order),callback:function ($$v) {_vm.$set(_vm.formItem.switch, \"order\", $$v)},expression:\"formItem.switch.order\"}})],1),(_vm.formItem.switch.order)?_c('Card',{staticStyle:{\"margin-left\":\"100px\"},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('Icon',{attrs:{\"type\":\"md-settings\"}}),_vm._v(\" 有序消息字段 \"),_c('Button',{staticStyle:{\"margin-left\":\"50px\"},attrs:{\"icon\":\"ios-refresh\",\"size\":\"small\",\"type\":\"primary\",\"loading\":_vm.commonColumnLoading},on:{\"click\":_vm.getCommonColumns}},[_vm._v(\"获取公共字段 \")])]},proxy:true}],null,false,4117777808)},[_c('FormItem',{attrs:{\"label\":\"字段\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"filterable\":\"\",\"allow-create\":\"\",\"placeholder\":\"不选表示按主键投递\",\"clearable\":\"\"},on:{\"on-create\":_vm.handleCreateColumn},model:{value:(_vm.formItem.orderKey),callback:function ($$v) {_vm.$set(_vm.formItem, \"orderKey\", $$v)},expression:\"formItem.orderKey\"}},_vm._l((_vm.formItem.constants.columnsForChose),function(item){return _c('Option',{key:item,attrs:{\"value\":item}},[_vm._v(_vm._s(item))])}),1)],1)],1):_vm._e()],1)],1),_c('Col',{attrs:{\"span\":\"11\"}},[_c('db-tables-preview',{attrs:{\"src-region-name\":_vm.srcRegion,\"dst-region-name\":null,\"db-name\":_vm.formItem.dbName,\"table-names\":_vm.formItem.tableName,\"mode\":_vm.formItem.buildMode,\"replication-type\":Number(1)}})],1)],1),_c('Divider'),_c('Button',{staticStyle:{\"margin-left\":\"50px\"},attrs:{\"type\":_vm.buttonTypeMap.get(_vm.formAction),\"loading\":_vm.dataLoading || _vm.commonColumnLoading},on:{\"click\":_vm.submitAll}},[_vm._v(_vm._s(_vm.buttonTextMap.get(_vm.formAction) + ': ' + _vm.mqType)+\" \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :style=\"{padding: '1px 1px',height: '100%'}\">\n    <Row :gutter=10 align=\"middle\">\n      <Col span=\"13\">\n        <Form :model=\"formItem\" :disabled=\"formAction === 'delete'\" :label-width=\"100\"\n              style=\"margin-right: 20px;margin-top: 10px\">\n          <Alert type=\"warning\" show-icon v-if=\"alertInfo.show\" closable>\n            {{ alertInfo.title }}\n            <template #desc>{{ alertInfo.message }}</template>\n          </Alert>\n          <Alert type=\"success\" show-icon v-if=\"alertInfo.successShow\" closable>\n            {{ alertInfo.title }}\n            <template #desc>{{ alertInfo.message }}</template>\n          </Alert>\n          <FormItem label=\"部门\">\n            <Select v-model=\"formItem.bu\" filterable placeholder=\"选择部门\">\n              <Option v-for=\"item in formItem.constants.buForChosen\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem prop=\"dbName\" label=\"库名\" :required=true>\n            <Input type=\"textarea\" v-model=\"formItem.dbName\" :autosize=\"true\" :readonly=\"true\" :border=\"false\"\n                   placeholder=\"请输入库名（支持正则）\"/>\n          </FormItem>\n          <FormItem label=\"同步表\" :required=true>\n            <Input @on-keydown.space.prevent v-model=\"formItem.tableName\" placeholder=\"请输入正则表达式\"\n                   @on-blur=\"afterEnterTableName\"></Input>\n          </FormItem>\n\n          <FormItem label=\"MQ主题\">\n            <Input v-model=\"formItem.topic\" style=\"width:350px\" placeholder=\"请输入自定义Topic\"\n                   @on-blur=\"refreshTopicBu\"\n            />\n          </FormItem>\n          <FormItem label=\"exclude类型\">\n            <Select v-model=\"formItem.excludeFilterTypes\" filterable  multiple style=\"width: 200px\" placeholder=\"选择过滤类型\" :disabled=\"filterReadOnly\">\n              <Option v-for=\"item in excludeFilterTypesForChose\" :value=\"item.value\" :key=\"item.value\" >{{ item.label }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"有序消息\">\n            <i-switch v-model=\"formItem.switch.order\" size=\"large\">\n              <template #open>\n                <span>On</span>\n              </template>\n              <template #close>\n                <span>Off</span>\n              </template>\n            </i-switch>\n          </FormItem>\n          <Card v-if=\"formItem.switch.order\" style=\"margin-left: 100px\">\n            <template #title>\n              <Icon type=\"md-settings\"/>\n              有序消息字段\n              <Button icon=\"ios-refresh\" size=\"small\" type=\"primary\" :loading=\"commonColumnLoading\"\n                      @click=\"getCommonColumns\" style=\"margin-left: 50px\">获取公共字段\n              </Button>\n            </template>\n            <FormItem label=\"字段\">\n              <Select v-model=\"formItem.orderKey\" filterable allow-create @on-create=\"handleCreateColumn\"\n                      style=\"width: 200px\" placeholder=\"不选表示按主键投递\" clearable>\n                <Option v-for=\"item in formItem.constants.columnsForChose\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n              </Select>\n            </FormItem>\n          </Card>\n        </Form>\n      </Col>\n      <Col span=\"11\">\n        <db-tables-preview :src-region-name=\"srcRegion\"\n                           :dst-region-name=\"null\"\n                           :db-name=\"formItem.dbName\"\n                           :table-names=\"formItem.tableName\"\n                           :mode=\"formItem.buildMode\"\n                           :replication-type=\"Number(1)\"\n        />\n      </Col>\n    </Row>\n    <Divider></Divider>\n    <Button :type=\"buttonTypeMap.get(formAction)\" @click=\"submitAll\" style=\"margin-left: 50px\"\n            :loading=\"dataLoading || commonColumnLoading\">{{\n        buttonTextMap.get(formAction) + ': ' + mqType\n      }}\n    </Button>\n  </div>\n</template>\n\n<script>\n\nimport DbTablesPreview from '@/components/v2/dbDrcBuild/dbTablesPreview.vue'\n\nexport default {\n  components: { DbTablesPreview },\n  FORM_ACTION_OPTION: {\n    CREATE: 'create',\n    EDIT: 'edit',\n    DELETE: 'delete'\n  },\n  name: 'dbMqConfig',\n  props: {\n    configData: {},\n    mqType: String,\n    srcRegion: String,\n    dstRegion: String,\n    dalclusterName: String,\n    dbNames: Array,\n    formAction: String,\n    filterReadOnly: Boolean\n  },\n  emits: ['finished'],\n  data () {\n    return {\n      meta: {\n        rowsFilterId: null,\n        colsFilterId: null,\n        dbReplicationIds: [],\n        originLogicTableConfig: {}\n      },\n      formItem: {\n        bu: null,\n        buildMode: 2,\n        dbName: null,\n        tableName: null,\n        topic: null,\n        orderKey: null,\n        excludeFilterTypes: [],\n        switch: {\n          order: false\n        },\n        constants: {\n          columnsForChose: [],\n          buForChosen: []\n        }\n      },\n      checkTableDataList: [],\n      table: {\n        dbMhaTableLoading: false,\n        dbMhaTableColumn: [\n          {\n            title: 'DB名',\n            key: 'dbName'\n          },\n          {\n            title: '源集群',\n            key: 'srcMhaName',\n            render: (h, params) => {\n              const row = params.row\n              const mha = row.srcMha\n              if (mha != null) {\n                return h('div', [\n                  h('span', mha.name),\n                  h('span', {\n                    style:\n                        {\n                          float: 'right',\n                          color: '#ababab'\n                        }\n                  }, mha.regionName + '(' + mha.dcName + ')')\n                ])\n              }\n            }\n          },\n          {\n            title: '目标集群',\n            key: 'dstMhaName',\n            render: (h, params) => {\n              const row = params.row\n              const mha = row.dstMha\n              if (mha != null) {\n                return h('div', [\n                  h('span', mha.name),\n                  h('span', {\n                    style:\n                        {\n                          float: 'right',\n                          color: '#ababab'\n                        }\n                  }, mha.regionName + '(' + mha.dcName + ')')\n                ])\n              }\n            }\n          }\n        ],\n        dbMhaTablePage: {\n          total: 0,\n          current: 1,\n          size: 5,\n          pageSizeOpts: [5, 10, 20, 100]\n        },\n        dbTableLoading: false,\n        dbTableColumn: [\n          {\n            title: '序号',\n            width: 75,\n            align: 'center',\n            fixed: 'left',\n            render: (h, params) => {\n              return h(\n                'span',\n                params.index + 1\n              )\n            }\n          },\n          {\n            title: '库名',\n            key: 'schema',\n            resizable: true\n          },\n          {\n            title: '表名',\n            key: 'table',\n            resizable: true\n          },\n          {\n            title: '结果',\n            align: 'center',\n            render: (h, params) => {\n              const row = params.row\n              const color = row.res !== 'ok' ? 'volcano' : 'green'\n              const text = row.res\n              return h('Tag', {\n                props: {\n                  color: color\n                }\n              }, text)\n            }\n          }\n        ],\n        dbTablePage: {\n          total: 0,\n          current: 1,\n          size: 5,\n          pageSizeOpts: [5, 10, 20, 100]\n        }\n      },\n      alertInfo: {\n        show: false,\n        successShow: false,\n        title: null,\n        message: null\n      },\n      buttonTextMap: new Map([\n        ['create', '新增 MQ投递'],\n        ['edit', '更新 MQ投递'],\n        ['delete', '删除 MQ投递']\n      ]),\n      buttonTypeMap: new Map([\n        ['create', 'success'],\n        ['edit', 'primary'],\n        ['delete', 'error']\n      ]),\n      dataLoading: false,\n      successSubmit: false,\n      commonColumnLoading: false,\n      excludeFilterTypesForChose: [\n        {\n          value: 'D',\n          label: 'DELETE'\n        },\n        {\n          value: 'U',\n          label: 'UPDATE'\n        },\n        {\n          value: 'I',\n          label: 'INSERT'\n        }\n      ]\n    }\n  },\n  methods: {\n    getParams: function () {\n      const param = {}\n      param.buName = this.formItem.buName\n      param.tag = this.formItem.tag\n      param.mode = this.formItem.buildMode\n      param.srcRegionName = this.srcRegion\n      param.replicationType = 1\n\n      if (this.gtidConfigurable) {\n        param.gtidInit = this.formItem.gtidInit\n      }\n\n      param.tblsFilterDetail = {\n        tableNames: this.formItem.tableName\n      }\n      param.dbName = this.formItem.dbName\n      return param\n    },\n    getEditParams: function () {\n      const param = {}\n      param.dalclusterName = this.dalclusterName\n      param.dbReplicationIds = this.meta.dbReplicationIds\n      param.dbNames = this.dbNames\n      param.srcRegionName = this.srcRegion\n\n      param.logicTableConfig = {\n        logicTable: this.formItem.tableName,\n        dstLogicTable: this.formItem.topic\n      }\n      param.originLogicTableConfig = this.meta.originLogicTableConfig\n      param.mqConfig = {\n        bu: this.formItem.bu,\n        mqType: this.mqType,\n        serialization: 'json',\n        persistent: false,\n        order: this.formItem.switch.order,\n        orderKey: this.formItem.switch.orderKey === '' ? null : this.formItem.orderKey,\n        excludeFilterTypes: this.formItem.excludeFilterTypes\n      }\n      console.log(param)\n      return param\n    },\n    async getCommonColumns () {\n      const params = this.getParams()\n      this.formItem.constants.columnsForChose = []\n      this.commonColumnLoading = true\n      await this.axios.get('/api/drc/v2/autoconfig/commonColumns', {\n        params: this.flattenObj(params)\n      }).then(response => {\n        if (response.data.status === 1) {\n          this.$Message.error('查询公共列名失败，请手动添加：' + response.data.message)\n        } else {\n          this.formItem.constants.columnsForChose = response.data.data\n          this.$Message.info('查询公共列名数：' + response.data.data.length)\n        }\n      }).catch(message => {\n        this.$Message.error('查询公共列名异常: ' + message)\n      }).finally(() => {\n        this.commonColumnLoading = false\n      })\n    },\n    handleCreateColumn (val) {\n      if (this.contains(this.formItem.constants.columnsForChose, val)) {\n        alert('已有项禁止创建')\n        return\n      }\n      if (val === '' || val === undefined || val === null) {\n        alert('字段不能为空')\n        return\n      }\n      this.formItem.constants.columnsForChose.push(val)\n    },\n    refreshTopicBu () {\n      if (this.formItem.topic) {\n        this.formItem.bu = this.formItem.topic.split('.')[0]\n      }\n    },\n    async afterEnterTableName () {\n      await this.getTableInfo()\n    },\n    flattenObj (ob) {\n      const result = {}\n      for (const i in ob) {\n        if ((typeof ob[i]) === 'object' && !Array.isArray(ob[i])) {\n          const temp = this.flattenObj(ob[i])\n          for (const j in temp) {\n            result[i + '.' + j] = temp[j]\n          }\n        } else {\n          result[i] = ob[i]\n        }\n      }\n      return result\n    },\n    async refresh () {\n      this.formItem.dbName = this.dbNames.join(',')\n      if (this.configData) {\n        console.log('edit panel ', JSON.stringify(this.configData))\n        this.formItem.tableName = this.configData.config.logicTable\n        this.formItem.topic = this.configData.config.dstLogicTable\n        this.formItem.orderKey = this.configData.orderKey\n        this.formItem.switch.order = this.configData.order\n        this.formItem.excludeFilterTypes = this.configData.excludeFilterTypes\n        this.refreshTopicBu()\n        this.getCommonColumns()\n        this.meta.dbReplicationIds = this.configData.dbReplicationIds\n        this.meta.originLogicTableConfig = this.configData.config\n        this.meta.originMyConfig = this.configData.config\n      } else {\n        console.log('insert new config')\n      }\n    },\n    getBuListFromQmq () {\n      this.axios.get('/api/drc/v2/messenger/qmq/bus')\n        .then(response => {\n          if (response.data.status === 1) {\n            window.alert('从查询qmq 部门信息失败!')\n          } else {\n            this.formItem.constants.buForChosen = response.data.data\n          }\n        })\n    },\n    async submitAll () {\n      const that = this\n      that.alertInfo.show = false\n      that.alertInfo.successShow = false\n      that.successSubmit = false\n      const params = this.getEditParams()\n      // if (!this.checkParam(params)) {\n      //   return\n      // }\n      that.dataLoading = true\n      await that.axios.post('/api/drc/v2/autoconfig/dbMq/' + this.formAction, params)\n        .then(response => {\n          const data = response.data\n          const success = data.status === 0\n          if (success) {\n            that.$Message.success('提交成功')\n            that.successSubmit = true\n            that.alertInfo.successShow = true\n            that.alertInfo.message = null\n            that.alertInfo.title = '提交成功'\n            that.$emit('finished')\n          } else {\n            that.$Message.warning('提交失败: ' + data.message)\n            that.alertInfo.show = true\n            that.alertInfo.title = '提交失败'\n            that.alertInfo.message = data.message\n          }\n        })\n        .catch(message => {\n          that.$Message.error('提交异常: ' + message)\n        })\n        .finally(() => {\n          that.dataLoading = false\n        })\n    },\n    rowsFilterCreateParamInit () {\n      return {\n        mode: 1,\n        drcStrategyId: 2000000002,\n        routeStrategyId: 0,\n        udlColumns: [],\n        columns: [],\n        context: '',\n        illegalArgument: false,\n        fetchMode: 0\n      }\n    },\n    columnsFilterCreateParamInit () {\n      return {\n        mode: null,\n        columns: []\n      }\n    }\n  },\n  computed: {\n    preCheckTablePage () {\n      const data = this.checkTableDataList\n      const start = this.table.dbTablePage.current * this.table.dbTablePage.size - this.table.dbTablePage.size\n      const end = start + this.table.dbTablePage.size\n      return [...data].slice(start, end)\n    },\n    useTripUdlOrUidMode () {\n      return [this.formItem.constants.rowsFilter.filterMode.TRIP_UDL, this.formItem.constants.rowsFilter.filterMode.TRIP_UDL_UID].includes(this.formItem.rowsFilterCreateParam.mode)\n    },\n    hasUdlColumn () {\n      return this.formItem.rowsFilterCreateParam.udlColumns.length !== 0\n    },\n    fillContextByRegion () {\n      return this.formItem.rowsFilterCreateParam.fetchMode === this.formItem.constants.rowsFilter.fetchMode.RPC\n    },\n    hasUidColumn () {\n      return this.formItem.rowsFilterCreateParam.columns.length !== 0\n    },\n    showUdlConfigDetail () {\n      return this.formItem.rowsFilterCreateParam.mode === this.formItem.constants.rowsFilter.filterMode.TRIP_UDL_UID || this.hasUdlLegalConfig || !this.hasUidLegalConfig\n    },\n    showUidConfigDetail () {\n      return this.formItem.rowsFilterCreateParam.mode === this.formItem.constants.rowsFilter.filterMode.TRIP_UDL_UID || this.hasUidLegalConfig || !this.hasUdlLegalConfig\n    },\n    hasUdlLegalConfig () {\n      return this.formItem.rowsFilterCreateParam.udlColumns.length !== 0 && this.formItem.rowsFilterCreateParam.drcStrategyId != null && this.formItem.rowsFilterCreateParam.drcStrategyId > 0\n    },\n    hasUidLegalConfig () {\n      return this.hasUidColumn\n    }\n  },\n  created () {\n    this.getBuListFromQmq()\n    this.refresh()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqConfig.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqConfig.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dbMqConfig.vue?vue&type=template&id=27aefe4b&scoped=true&\"\nimport script from \"./dbMqConfig.vue?vue&type=script&lang=js&\"\nexport * from \"./dbMqConfig.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"27aefe4b\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div :style=\"{padding: '1px 1px',height: '100%'}\">\n    <Table style=\"margin-top: 20px\" stripe :columns=\"columns\" :data=\"tableData\" :loading=\"dataLoading\" border\n           ref=\"multipleTable\">\n      <template slot=\"action\" slot-scope=\"{ row, index }\">\n        <Button type=\"primary\" size=\"small\" style=\"margin-right: 5px\" @click=\"goToUpdateConfig(row, index)\">修改\n        </Button>\n        <Button type=\"error\" size=\"small\" style=\"margin-right: 5px\" @click=\"goToDeleteConfig(row, index)\">删除\n        </Button>\n      </template>\n    </Table>\n    <br/>\n    <Button type=\"success\" @click=\"goToInsertConfig\" icon=\"md-add\">\n      新增\n    </Button>\n    <Modal v-model=\"editModal.open\" width=\"1200px\" :footer-hide=\"true\" :title=\"actionTitle\">\n      <db-mq-config ref=\"dbReplicationConfigComponent\" @finished=\"finishConfig\"\n                             v-if=\"editModal.open\"\n                             :dalcluster-name=\"dalclusterName\"\n                             :mq-type=\"mqType\"\n                             :config-data=\"selectedRow\"\n                             :src-region=\"srcRegion\"\n                             :dst-region=\"srcRegion\"\n                             :db-names=\"dbNames\"\n                             :form-action=\"action\"\n                             :filter-read-only=\"filterReadOnly\"\n      />\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport DbMqConfig from '@/components/v2/dbDrcBuild/dbMqConfig.vue'\n\nexport default {\n  name: 'mqTables',\n  components: { DbMqConfig },\n  props: {\n    dalclusterName: String,\n    mqType: String,\n    dbName: String,\n    dbNames: Array,\n    srcRegion: String,\n    dstRegion: String,\n    tableData: Array,\n    dataLoading: Boolean\n  },\n  emits: ['updated'],\n  data () {\n    return {\n      selectedRow: {},\n      action: null,\n      actionTitleMap: new Map([\n        ['create', '新增 MQ投递配置'],\n        ['edit', '更新 MQ投递配置'],\n        ['delete', '⚠️删除 MQ投递配置']\n      ]),\n      editModal: {\n        open: false\n      },\n      filterReadOnly: false,\n      columns: [\n        {\n          title: '序号',\n          width: 75,\n          align: 'center',\n          fixed: 'left',\n          render: (h, params) => {\n            return h(\n              'span',\n              params.index + 1\n            )\n          }\n        },\n        {\n          title: '表名',\n          key: 'config.logicTable',\n          render: (h, params) => {\n            const config = params.row.config\n            return h(\n              'span',\n              config.logicTable\n            )\n          }\n        },\n        {\n          title: '主题',\n          key: 'topic',\n          render: (h, params) => {\n            const config = params.row.config\n            return h(\n              'span',\n              config.dstLogicTable\n            )\n          }\n        },\n        {\n          title: '有序',\n          key: 'order',\n          width: 100,\n          render: (h, params) => {\n            const row = params.row\n            const color = 'blue'\n            const text = row.order ? '有序' : '无序'\n            return h('Tag', {\n              props: {\n                color: color\n              }\n            }, text)\n          }\n        },\n        {\n          title: '有序相关字段',\n          key: 'orderKey',\n          width: 100,\n          render: (h, params) => {\n            const row = params.row\n            const text = row.order ? (row.orderKey ? row.orderKey : '主键') : ''\n            return h('span', text)\n          }\n        },\n        {\n          title: '过滤类型',\n          key: 'excludeFilterTypes'\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          align: 'center',\n          fixed: 'right'\n        }\n      ]\n    }\n  },\n  methods: {\n    async goToInsertConfig () {\n      this.selectedRow = null\n      this.action = DbMqConfig.FORM_ACTION_OPTION.CREATE\n      this.editModal.open = true\n      this.filterReadOnly = false\n    },\n    async goToUpdateConfig (row, index) {\n      this.selectedRow = row\n      this.action = DbMqConfig.FORM_ACTION_OPTION.EDIT\n      this.editModal.open = true\n      this.filterReadOnly = true\n    },\n    async goToDeleteConfig (row, index) {\n      this.selectedRow = row\n      this.action = DbMqConfig.FORM_ACTION_OPTION.DELETE\n      this.editModal.open = true\n    },\n    finishConfig () {\n      this.selectedRow = null\n      this.editModal.open = false\n      this.$emit('updated')\n    }\n  },\n  computed: {\n    actionTitle () {\n      return this.actionTitleMap.get(this.action) + ': ' + this.mqType\n    }\n  },\n  created () {\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mqTables.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mqTables.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mqTables.vue?vue&type=template&id=30fe4896&scoped=true&\"\nimport script from \"./mqTables.vue?vue&type=script&lang=js&\"\nexport * from \"./mqTables.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"30fe4896\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({padding: '1px 1px',height: '100%'})},[_c('Collapse',{model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},_vm._l((_vm.mhaMqDtos),function(mhaMqDto,index){return _c('Panel',{key:mhaMqDto.srcMha.name +'-> mq',attrs:{\"name\":String(index)},scopedSlots:_vm._u([{key:\"content\",fn:function(){return [_c('Button',{staticStyle:{\"margin-bottom\":\"10px\"},attrs:{\"icon\":\"ios-open-outline\"},on:{\"click\":function($event){return _vm.openModal(index)}}},[_vm._v(\" 打开详情\")]),_c('mha-db-mq-panel',{attrs:{\"mha-mq-dtos\":mhaMqDto}}),_c('Modal',{attrs:{\"width\":\"1500px\",\"footer-hide\":true},model:{value:(_vm.openDetailModal[index]),callback:function ($$v) {_vm.$set(_vm.openDetailModal, index, $$v)},expression:\"openDetailModal[index]\"}},[(_vm.openDetailModal[index])?_c('drc-mq-config',{ref:\"dbReplicationConfigComponent\",refInFor:true,attrs:{\"mq-type\":mhaMqDto.mhaMessengerDto.mqType,\"mha-name\":mhaMqDto.srcMha.name,\"dc\":mhaMqDto.srcMha.dcName}}):_vm._e()],1)]},proxy:true}],null,true)},[_vm._v(\" \"+_vm._s(mhaMqDto.srcMha.name + ' ------ ' + ([mhaMqDto.mhaDbReplications.length] + 'DB'))+\" \")])}),1),_c('br'),_c('Button',{attrs:{\"type\":\"primary\",\"icon\":\"md-sync\"},on:{\"click\":_vm.goToSwitchMessengers}},[_vm._v(\" 切换Messenger生效配置 \")]),_c('br')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.mhaMqDtos.mhaMessengerDto)?_c('Table',{attrs:{\"stripe\":\"\",\"border\":\"\",\"columns\":_vm.columns,\"data\":_vm.mhaDbReplications}}):_vm._e(),(_vm.mhaMqDtos.mhaMessengerDto)?_c('Table',{attrs:{\"stripe\":\"\",\"border\":\"\",\"columns\":_vm.mhaColumns,\"data\":[_vm.mhaMqDtos]}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <Table stripe border :columns=\"columns\" :data=\"mhaDbReplications\" v-if=\"!mhaMqDtos.mhaMessengerDto\">\n    </Table>\n    <Table stripe border :columns=\"mhaColumns\" :data=\"[mhaMqDtos]\" v-if=\"mhaMqDtos.mhaMessengerDto\">\n    </Table>\n  </div>\n\n</template>\n\n<script>\nimport prettyMilliseconds from 'pretty-ms'\n\nexport default {\n  name: 'mhaDbMqPanel',\n  props: {\n    mhaMqDtos: {}\n  },\n  data () {\n    return {\n      mhaDbReplications: this.mhaMqDtos.mhaDbReplications,\n      value: ['1'],\n      delayDataLoading: false,\n      columns: [\n        {\n          title: '类型',\n          width: 80,\n          render: (h, params) => {\n            const row = params.row\n            let text = 'none'\n            let type = 'error'\n            let disabled = false\n            switch (row.transmissionType) {\n              case 'simplex':\n                text = '单'\n                type = 'info'\n                break\n              case 'duplex':\n                text = '双'\n                type = 'success'\n                break\n              default:\n                text = '无'\n                disabled = true\n                break\n            }\n            return h('Button', {\n              props: {\n                type: type,\n                size: 'small',\n                disabled: disabled\n              },\n              on: {\n                click: () => {\n                  this.showModal(row)\n                }\n              }\n            }, text)\n          }\n        },\n        {\n          title: '延迟',\n          key: 'drcStatus',\n          width: 100,\n          align: 'center',\n          renderHeader: (h, params) => {\n            return h('span', [\n              h('span', '延迟'),\n              this.replicationIds && this.replicationIds.length !== 0 && h('Button', {\n                on: {\n                  click: async () => {\n                    await this.getMhaMessengerDelay()\n                  }\n                },\n                props: {\n                  loading: this.delayDataLoading,\n                  size: 'small',\n                  shape: 'circle',\n                  type: 'default',\n                  icon: 'md-refresh'\n                }\n              })\n            ])\n          },\n          render: (h, params) => {\n            const row = params.row\n            let color, text\n            if (row.drcStatus === true) {\n              if (row.delay != null) {\n                text = prettyMilliseconds(row.delay, { compact: true })\n                if (row.delay > 10000) {\n                  color = 'warning'\n                } else {\n                  color = 'success'\n                }\n              } else {\n                text = '已接入'\n                color = 'blue'\n              }\n            } else {\n              text = '未接入'\n              color = 'default'\n            }\n            return h('Tag', {\n              props: {\n                color: color\n              }\n            }, text)\n          }\n        },\n        {\n          title: 'DB 名',\n          key: 'srcDbName',\n          render: (h, params) => {\n            return h('p', params.row.src.dbName)\n          }\n        },\n        {\n          title: 'messenger',\n          key: 'srcDbName',\n          render: (h, params) => {\n            return h('p', params.row.dbMessengerDto ? params.row.dbMessengerDto.ips.join(', ') : null)\n          }\n        }\n      ],\n      mhaColumns: [\n        {\n          title: '延迟',\n          key: 'drcStatus',\n          width: 100,\n          align: 'center',\n          renderHeader: (h, params) => {\n            return h('span', [\n              h('span', '延迟'),\n              this.mhaMqDtos.mhaMessengerDto.ips && h('Button', {\n                on: {\n                  click: async () => {\n                    await this.getMhaMessengerDelay()\n                  }\n                },\n                props: {\n                  loading: this.delayDataLoading,\n                  size: 'small',\n                  shape: 'circle',\n                  type: 'default',\n                  icon: 'md-refresh'\n                }\n              })\n            ])\n          },\n          render: (h, params) => {\n            const row = params.row\n            let color, text\n            if (row.mhaMessengerDto.ips) {\n              if (row.delay != null) {\n                text = prettyMilliseconds(row.delay, { compact: true })\n                if (row.delay > 10000) {\n                  color = 'warning'\n                } else {\n                  color = 'success'\n                }\n              } else {\n                text = '已接入'\n                color = 'blue'\n              }\n            } else {\n              text = '未接入'\n              color = 'default'\n            }\n            return h('Tag', {\n              props: {\n                color: color\n              }\n            }, text)\n          }\n        },\n        {\n          title: '类型',\n          width: 100,\n          key: '',\n          render: (h, params) => {\n            return h('p', 'mha 同步')\n          }\n        },\n        {\n          title: 'DB 名',\n          key: 'srcDbName',\n          render: (h, params) => {\n            return h('p', params.row.mhaDbReplications.map(item => item.src.dbName).join(','))\n          }\n        },\n        {\n          title: 'messenger',\n          key: '',\n          render: (h, params) => {\n            return h('p', params.row.mhaMessengerDto.ips.join(','))\n          }\n        },\n        {\n          title: 'initGtid',\n          key: '',\n          render: (h, params) => {\n            return h('p', params.row.mhaMessengerDto.gtidInit)\n          }\n        }\n      ]\n    }\n  },\n  methods: {\n    showModal (row) {\n      this.$Message.info('还未上线，敬请期待')\n    },\n    async getMhaMessengerDelay () {\n      this.delayDataLoading = true\n      this.axios.post('/api/drc/v2/messenger/delay', {\n        mqType: this.mhaMqDtos.mhaMessengerDto.mqType,\n        mhas: [this.mhaMqDtos.srcMha.name],\n        dbs: this.mhaMqDtos.mhaDbReplications.map(item => item.src.dbName)\n      })\n        .then(response => {\n          const delays = response.data.data[0].delayInfoDto.delay\n          this.$set(this.mhaMqDtos, 'delay', delays)\n        })\n        .catch(message => {\n          console.log(message)\n          // this.$Message.error('查询 MHA 延迟异常: ' + message)\n        })\n        .finally(() => {\n          this.delayDataLoading = false\n        })\n    }\n  },\n  computed: {\n    replicationIds () {\n      return this.mhaDbReplications\n        .filter(item => item.drcStatus === true)\n        .map(item => item.id)\n        .join(',')\n    }\n  },\n  created () {\n    this.getMhaMessengerDelay()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mhaDbMqPanel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mhaDbMqPanel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mhaDbMqPanel.vue?vue&type=template&id=43d487ef&scoped=true&\"\nimport script from \"./mhaDbMqPanel.vue?vue&type=script&lang=js&\"\nexport * from \"./mhaDbMqPanel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"43d487ef\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div :style=\"{padding: '1px 1px',height: '100%'}\">\n    <Collapse v-model=\"value\">\n      <Panel v-for=\"(mhaMqDto, index) in mhaMqDtos\"\n             :key=\"mhaMqDto.srcMha.name +'-> mq'\"\n             :name=\"String(index)\">\n        {{ mhaMqDto.srcMha.name + ' ------ ' + ([mhaMqDto.mhaDbReplications.length] + 'DB') }}\n        <template #content>\n          <Button icon=\"ios-open-outline\" @click=\"openModal(index)\" style=\"margin-bottom: 10px\"> 打开详情</Button>\n          <mha-db-mq-panel :mha-mq-dtos=\"mhaMqDto\"/>\n              <Modal v-model=\"openDetailModal[index]\" width=\"1500px\" :footer-hide=\"true\">\n                <drc-mq-config ref=\"dbReplicationConfigComponent\" v-if=\"openDetailModal[index]\"\n                              :mq-type=\"mhaMqDto.mhaMessengerDto.mqType\"\n                              :mha-name=\"mhaMqDto.srcMha.name\"\n                              :dc=\"mhaMqDto.srcMha.dcName\"\n                />\n              </Modal>\n        </template>\n      </Panel>\n    </Collapse>\n    <br/>\n    <Button type=\"primary\" @click=\"goToSwitchMessengers\" icon=\"md-sync\">\n      切换Messenger生效配置\n    </Button>\n    <br/>\n  </div>\n</template>\n\n<script>\n\nimport MhaDbMqPanel from '@/components/v2/dbDrcBuild/mhaDbMqPanel.vue'\nimport DrcMqConfig from '@/components/v2/mhaMessengers/drcMqConfig.vue'\n\nexport default {\n  name: 'mhaMqPanel',\n  components: { DrcMqConfig, MhaDbMqPanel },\n  props: {\n    mhaMqDtos: Array\n  },\n  emits: ['updated'],\n  data () {\n    return {\n      value: [],\n      openDetailModal: [],\n      dataLoading: false\n    }\n  },\n  methods: {\n    openModal (index) {\n      console.log(this.mhaMqDtos)\n      this.$set(this.openDetailModal, index, true)\n    },\n    goToSwitchMessengers () {\n      this.$Modal.confirm({\n        title: '切换Messenger',\n        content: '<p>请确认</p>',\n        loading: true,\n        onOk: () => {\n          this.switchMessengers()\n        }\n      })\n    },\n    switchMessengers () {\n      const params = this.getSwitchParams()\n      console.log(params)\n      this.dataLoading = true\n      this.axios.post('/api/drc/v2/autoconfig/switchMessengers', params)\n        .then(response => {\n          const data = response.data\n          const success = data.status === 0\n          if (success) {\n            this.$Message.success('提交成功')\n          } else {\n            this.$Message.warning('提交失败: ' + data.message)\n          }\n        })\n        .catch(message => {\n          this.$Message.error('提交异常: ' + message)\n        })\n        .finally(() => {\n          this.$Modal.remove()\n          this.dataLoading = false\n          this.$emit('updated')\n        })\n    },\n    getSwitchParams () {\n      return this.mhaMqDtos.map((item) => {\n        return {\n          srcMhaName: item.srcMha.name,\n          mqType: item.mhaMessengerDto.mqType,\n          dbNames: item.mhaDbReplications.map((mhaDbReplication) => {\n            return mhaDbReplication.src.dbName\n          })\n        }\n      })\n    }\n  },\n  created () {\n    console.log('mhaMqDtos', this.mhaMqDtos)\n    this.openDetailModal = Array(this.mhaMqDtos.length).fill(false)\n    if (this.mhaMqDtos.length === 1) {\n      this.value = ['0']\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mhaMqPanel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mhaMqPanel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mhaMqPanel.vue?vue&type=template&id=99adf070&scoped=true&\"\nimport script from \"./mhaMqPanel.vue?vue&type=script&lang=js&\"\nexport * from \"./mhaMqPanel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"99adf070\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <base-component>\n    <Breadcrumb :style=\"{margin: '15px 0 15px 185px', position: 'fixed'}\">\n      <BreadcrumbItem to=\"/home\">首页</BreadcrumbItem>\n      <BreadcrumbItem to=\"/v2/dbMqBuildV2\">DB粒度 Mq</BreadcrumbItem>\n    </Breadcrumb>\n    <Content class=\"content\"\n             :style=\"{padding: '10px', background: '#ffffff', margin: '50px 0 111px 185px', zIndex: '1'}\">\n      <Row :gutter=10 align=\"middle\">\n        <Col span=\"18\">\n          <Form :model=\"formItem\" :label-width=\"100\" style=\"margin-right: 20px;margin-top: 10px\">\n            <FormItem label=\"消息类型\" :required=true>\n              <Select v-model=\"meta.mqType\"\n                      @on-change=\"selectDb\"\n                      placeholder=\"mqType\">\n                <Option v-for=\"item in mqTypeList\" :value=\"item\" :key=\"item\">{{\n                    item\n                  }}\n                </Option>\n              </Select>\n            </FormItem>\n            <FormItem label=\"数据库\" :required=true>\n              <Select\n                v-model=\"meta.dbName\"\n                filterable\n                :disabled=\"!!meta.fixDb\"\n                placeholder=\"请搜索数据库信息\"\n                @on-change=\"selectDb\"\n                :remote-method=\"getExistDb\"\n                :loading=\"dataLoading\">\n                <Option v-for=\"(option, index) in meta.dbOptions\" :value=\"option.dbName\" :key=\"index\">{{ option.dbName }}</Option>\n              </Select>\n            </FormItem>\n            <FormItem label=\"同步方向\" :required=true>\n              <RadioGroup v-model=\"selectedExistReplication\" button-style=\"solid\"\n                          @on-change=\"afterSelectExistReplication\">\n                <Radio v-for=\"items in meta.existReplicationRegionOptions\"\n                       :key=\"items.srcRegionName\"\n                       :label=\"items.srcRegionName\" border>\n                  {{ items.srcRegionName  }}\n                </Radio>\n              </RadioGroup>\n              <Button type=\"primary\" icon=\"md-add\" ghost @click=\"goToCreateReplication\">新增</Button>\n              <Modal v-model=\"createModal.open\" width=\"1200px\" :footer-hide=\"true\" title=\"创建同步\">\n                <mha-preview v-if=\"createModal.open\" :db-name=\"meta.dbName\" :replication-type=\"replicationType\" @updated=\"selectDb\"\n                             :exist-replication-region-options=\"meta.existReplicationRegionOptions\"></mha-preview>\n              </Modal>\n            </FormItem>\n            <Divider orientation=\"left\">消息投递配置</Divider>\n            <Card style=\"width:100%\">\n              <mq-tables :dalcluster-name=\"drcConfig.dalclusterName\" :table-data=\"drcConfig.logicTableSummaryDtos\" :data-loading=\"configDataLoading\"\n                      :src-region=\"meta.srcRegionName\" :dst-region=\"meta.dstRegionName\" :db-name=\"meta.dbName\"\n                      :db-names=\"drcConfig.dbNames\" :mq-type=\"meta.mqType\" @updated=\"getDrcConfig\"\n              />\n            </Card>\n            <Divider orientation=\"left\">DB</Divider>\n            <Card style=\"width:100%\">\n              <mha-mq-panel v-if=\"drcConfig.mhaMqDtos\" :mha-mq-dtos=\"drcConfig.mhaMqDtos\"  @updated=\"getDrcConfig\"/>\n            </Card>\n          </Form>\n        </Col>\n      </Row>\n    </Content>\n  </base-component>\n</template>\n<script>\n\nimport MhaPreview from '@/components/v2/dbDrcBuild/mhaPreview.vue'\nimport MqTables from '@/components/v2/dbDrcBuild/mqTables.vue'\nimport MhaMqPanel from '@/components/v2/dbDrcBuild/mhaMqPanel.vue'\n\nexport default {\n  components: { MhaMqPanel, MqTables, MhaPreview },\n  data () {\n    return {\n      createModal: {\n        open: false\n      },\n      mqTypeList: this.constant.mqTypeList,\n      dataLoading: false,\n      configDataLoading: false,\n      selectedExistReplication: this.$route.query.srcRegionName,\n      formItem: {\n        srcRegionName: null,\n        dstRegionName: null\n      },\n      drcConfig: {},\n      meta: {\n        mqType: this.$route.query.mqType,\n        dbName: this.$route.query.dbName,\n        srcRegionName: this.$route.query.srcRegionName,\n        dstRegionName: this.$route.query.dstRegionName,\n        fixDb: this.$route.query.fixDb,\n        regionOptions: [],\n        dbOptions: [],\n        existReplicationRegionOptions: []\n      },\n      mqTypeToReplicationType: this.constant.mqTypeToReplicationType\n    }\n  },\n  methods: {\n    getParams: function () {\n      const param = {}\n      param.dbName = this.meta.dbName\n      param.srcRegionName = this.meta.srcRegionName\n      param.dstRegionName = this.meta.dstRegionName\n      param.mqType = this.meta.mqType\n      return param\n    },\n    async getExistDb (dbName) {\n      if (dbName === null || dbName.length === null || dbName.length <= 0) {\n        return []\n      }\n      const that = this\n      that.dataLoading = true\n      await that.axios.get('/api/drc/v2/autoconfig/getExistDb', {\n        params: {\n          dbName: dbName\n        }\n      })\n        .then(response => {\n          const data = response.data.data\n          if (data) {\n            that.meta.dbOptions = data\n          } else {\n            that.$Message.warning('查询DB失败')\n          }\n        })\n        .catch(message => {\n          that.$Message.error('查询DB异常: ' + message)\n        })\n        .finally(() => {\n          that.dataLoading = false\n        })\n    },\n    async selectDb () {\n      await this.getExistReplicationRegionOptions()\n      await this.getDrcConfig()\n    },\n    async getDrcConfig () {\n      this.createModal.open = false\n      this.resetPath()\n      const params = this.getParams()\n      this.drcConfig = {}\n      if (!params.dbName) {\n        this.$Message.warning('请先填写数据库')\n        return\n      }\n      if (!params.srcRegionName) {\n        return\n      }\n      this.configDataLoading = true\n      await this.axios.get('/api/drc/v2/autoconfig/getDbMqConfig', {\n        params: {\n          dbName: params.dbName,\n          mqType: params.mqType,\n          srcRegionName: params.srcRegionName\n        }\n      })\n        .then(response => {\n          const data = response.data.data\n          const success = data && response.data.status === 0\n          if (success) {\n            console.log('getDrcConfig', data)\n            this.drcConfig = data\n            this.$Message.success('查询DRC配置成功 ')\n          } else {\n            this.$Message.warning('查询失败：' + response.data.message)\n          }\n        })\n        .catch(message => {\n          this.$Message.error('查询异常: ' + message)\n        })\n        .finally(() => {\n          this.configDataLoading = false\n        })\n    },\n    async afterSelectExistReplication () {\n      console.log('afterSelectExistReplication ', this.selectedExistReplication)\n      this.meta.srcRegionName = this.selectedExistReplication.trim()\n      this.getDrcConfig()\n    },\n    async getExistReplicationRegionOptions () {\n      const that = this\n      that.dataLoading = true\n      that.meta.existReplicationRegionOptions = []\n      const params = this.getParams()\n      await that.axios.get('/api/drc/v2/autoconfig/getExistDbMqConfigDcOption', {\n        params: {\n          dbName: params.dbName,\n          mqType: params.mqType\n        }\n      })\n        .then(response => {\n          const data = response.data.data\n          const success = data && response.data.status === 0\n          if (success) {\n            that.meta.existReplicationRegionOptions = data\n            if (that.meta.existReplicationRegionOptions.length > 0) {\n              that.$Message.success('查询到 ' + that.meta.existReplicationRegionOptions.length + ' 个可选同步方向')\n            }\n          } else {\n            that.meta.srcRegionName = null\n            that.meta.dstRegionName = null\n            that.$Message.warning('查询可选地域失败')\n          }\n        })\n        .catch(message => {\n          that.$Message.error('查询可选地域失败: ' + message)\n        })\n        .finally(() => {\n          that.dataLoading = false\n        })\n    },\n    async goToCreateReplication () {\n      this.createModal.open = true\n    },\n    resetPath () {\n      this.$router.replace({\n        query: {\n          mqType: this.meta.mqType,\n          dbName: this.meta.dbName,\n          srcRegionName: this.meta.srcRegionName,\n          dstRegionName: this.meta.dstRegionName,\n          fixDb: this.meta.fixDb\n        }\n        // eslint-disable-next-line handle-callback-err\n      }).catch(() => {\n      })\n    },\n    flattenObj (ob) {\n      const result = {}\n      for (const i in ob) {\n        if ((typeof ob[i]) === 'object' && !Array.isArray(ob[i])) {\n          const temp = this.flattenObj(ob[i])\n          for (const j in temp) {\n            result[i + '.' + j] = temp[j]\n          }\n        } else {\n          result[i] = ob[i]\n        }\n      }\n      return result\n    }\n  },\n  computed: {\n    replicationType () {\n      const type = this.mqTypeToReplicationType.get(this.meta.mqType)\n      console.log(this.meta.mqType, 'replicationType ', type)\n      if (type === undefined) {\n        return 1\n      }\n      return type\n    }\n  },\n  created () {\n    // this.getRegions()\n    this.axios.get('/api/drc/v2/permission/meta/mhaReplication/modify').then((response) => {\n      if (response.data.status === 403) {\n        this.$router.push('/nopermission')\n        return\n      }\n      if (this.meta.dbName) {\n        this.getExistReplicationRegionOptions()\n        this.getDrcConfig()\n      }\n    })\n  }\n}\n</script>\n\n<style>\n.drawer-footer {\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  border-top: 1px solid #e8e8e8;\n  padding: 10px 16px;\n  text-align: right;\n  background: #fff;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqBuildV2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dbMqBuildV2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dbMqBuildV2.vue?vue&type=template&id=b9ac9a6a&\"\nimport script from \"./dbMqBuildV2.vue?vue&type=script&lang=js&\"\nexport * from \"./dbMqBuildV2.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dbMqBuildV2.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}